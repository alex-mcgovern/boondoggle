{
  "parserOptions": {
    "project": "./tsconfig.json"
  },

  "ignorePatterns": ["*.snap", "dist", "storybook-static", "docs", "build"],

  "overrides": [
    /**
     *  Typescript
     */
    {
      "extends": [
        "plugin:react/jsx-runtime",
        "airbnb",
        "airbnb/hooks",
        "airbnb-typescript",
        "eslint:recommended",
        "plugin:react-perf/recommended",
        "prettier",
        "plugin:@typescript-eslint/recommended"
      ],
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": [
        "import",
        "jsdoc",
        "react-perf",
        "sonarjs",
        "sort-destructure-keys",
        "sort-keys-fix",
        "typescript-sort-keys",
        "unused-imports"
      ],
      "rules": {
        "@typescript-eslint/consistent-type-imports": [
          "warn",
          {
            "disallowTypeAnnotations": true,
            "prefer": "type-imports"
          }
        ],
        "import/no-restricted-paths": [
          "warn",
          {
            "zones": [
              {
                "from": "./src/index.ts",
                "message": "Do not import from the root index, this will cause a dependency cycle.",
                "target": "./src/components"
              }
            ]
          }
        ],
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/switch-exhaustiveness-check": "warn",
        "arrow-body-style": ["warn", "always"],
        "curly": ["warn", "all"],
        "import/no-cycle": "warn",
        "import/no-default-export": "warn",
        "import/no-duplicates": "warn",
        "import/no-extraneous-dependencies": [
          "warn",
          {
            "devDependencies": [
              "**/*.test.ts",
              "**/*.test.tsx",
              "**/*.css.ts",
              "**/*.stories.tsx",
              "**/test.*",
              "**/stories.tsx",
              "./test/**/*",
              "./documentation/**/*",
              "tsup.config.ts"
            ]
          }
        ],
        "import/order": [
          "warn",
          {
            "groups": [
              ["builtin", "external"],
              "internal",
              ["parent", "sibling", "index"],
              "object",
              "type"
            ],
            "newlines-between": "always"
          }
        ],
        "import/prefer-default-export": "off",
        "no-console": [
          "warn",
          {
            "allow": ["error", "warn", "info"]
          }
        ],
        "no-unused-vars": "off",
        "react-perf/jsx-no-jsx-as-prop": "warn",
        "react-perf/jsx-no-new-array-as-prop": "warn",
        "react-perf/jsx-no-new-function-as-prop": "warn",
        "react-perf/jsx-no-new-object-as-prop": "warn",
        "react/button-has-type": "warn",
        "react/destructuring-assignment": [
          "warn",
          "always",
          {
            "destructureInSignature": "always",
            "ignoreClassFields": true
          }
        ],
        "react/jsx-filename-extension": [
          "warn",
          {
            "extensions": [".tsx"]
          }
        ],
        "react/jsx-props-no-spreading": "off",
        "react/jsx-sort-props": [
          "warn",
          {
            "ignoreCase": true
          }
        ],
        "react/jsx-uses-react": "off",
        "react/no-multi-comp": "warn",
        "react/prop-types": "off",
        "react/react-in-jsx-scope": "off",
        "react/require-default-props": "off",
        "sort-destructure-keys/sort-destructure-keys": "warn",
        "sort-keys-fix/sort-keys-fix": [
          "warn",
          "asc",
          {
            "caseSensitive": false,
            "natural": false
          }
        ],
        "jsdoc/require-jsdoc": [
          "warn",
          {
            "enableFixer": false,
            "contexts": [
              "ArrowFunctionExpression",
              "FunctionDeclaration",
              "FunctionExpression",
              // "ObjectExpression",
              "TSInterfaceDeclaration",
              // "TSTypeAliasDeclaration",
              "TSPropertySignature"
            ]
          }
        ],
        "jsdoc/require-description": [
          "warn",
          {
            "descriptionStyle": "body",
            "contexts": [
              "TSInterfaceDeclaration",
              "ObjectExpression",
              "ArrowFunctionExpression"
            ]
          }
        ],
        // "jsdoc/require-description-complete-sentence": "warn",
        "typescript-sort-keys/interface": "warn",
        "typescript-sort-keys/string-enum": "warn",
        "unused-imports/no-unused-imports": "warn",
        "unused-imports/no-unused-vars": [
          "warn",
          {
            "args": "after-used",
            "argsIgnorePattern": "^_",
            "vars": "all",
            "varsIgnorePattern": "^_"
          }
        ]
      }
    },

    /**
     * Overrides for MDX files
     */
    {
      "files": ["**/*.mdx"],

      "extends": "plugin:mdx/recommended",
      "parser": "eslint-mdx"
    },

    /**
     * Overrides for vanilla extract css.ts files
     */
    {
      "files": ["**/*.css.ts"],

      "rules": {
        "sonarjs/no-duplicate-string": "off"
      }
    },

    /**
     * Tests
     */
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],

      "env": {
        "jest": true
      },
      "rules": {
        "sonarjs/no-duplicate-string": "off",
        "react-perf/jsx-no-jsx-as-prop": "off",
        "react-perf/jsx-no-new-array-as-prop": "off",
        "react-perf/jsx-no-new-function-as-prop": "off",
        "react-perf/jsx-no-new-object-as-prop": "off"
      }
    },

    /**
     * Storybook
     */

    {
      "files": ["*.stories.tsx", "stories.tsx"],

      "rules": {
        "import/no-default-export": "off",
        "import/prefer-default-export": "warn",
        "react/function-component-definition": "off",
        "react/no-multi-comp": "off"
      }
    },

    /**
     * Misc
     */
    {
      "files": ["*.stories.tsx", "tsup.config.ts"],

      "rules": {
        "import/no-default-export": "off",
        "import/prefer-default-export": "warn"
      }
    }
  ]
}
