{
    "Helper function": {
        "scope": "javascript,typescript",
        "prefix": "JS Fn",
        "body": [
            "export function functionName({ argument }) {",
            "\treturn argument;",
            "}"
        ]
    },

    "Docs": {
        "prefix": "docs",
        "body": [
            "import {",
            "\tArgTypes,",
            "\tCanvas,",
            "\tControls,",
            "\tDescription,",
            "\tMeta,",
            "\tSource,",
            "\tStory,",
            "\tTitle,",
            "} from \"@storybook/blocks\";",
            "",
            "import { ${1:Component} } from \".\";",
            "import * as stories from \"./stories.tsx\";",
            "",
            "<Meta of={stories} />",
            "<Title of={stories} />",
            "<Description of={${1:Component}} />",
            "",
            "## Example",
            "",
            "<Canvas",
            "\tsourceState=\"shown\"",
            "\tof={stories.Default}",
            "/>",
            "",
            "## Props",
            "",
            "<ArgTypes of={${1:Component}} />"
        ]
    },

    "jest suite boilerplate": {
        "scope": "javascript,typescript",
        "prefix": "Jest",
        "body": [
            "test(\"XXXXX\", () => {",
            "  expect(YYYYYY).toBe(ZZZZZ)",
            "});",
            ""
        ]
    },

    "testing-library boilerplate": {
        "scope": "typescriptreact",
        "prefix": "rtl",
        "body": [
            "/** @jest-environment jsdom */",
            "import { render } from \"@testing-library/react\";",
            "import { MOCK_VALUES } from \"../../../../mocks/MOCK_VALUES.mock\";",
            "import { ${1:Component} } from \"..\";",
            "",
            "import { ${1:Component}Props } from \"..\";",
            "",
            "const PROPS: ${1:Component}Props = {}",
            "",
            "const renderComponent = ({ ...props }: ${1:Component}Props) => {",
            "  return render(<${1:Component} {...props} />);",
            "};",
            "",
            "describe(\"<${1:Component} />\", () => {",
            "  describe(\"when rendering\", () => {",
            "\tit(\"should render without throwing\", () => {",
            "\t\tconst { container } = renderComponent(PROPS);",
            "",
            "\t\texpect(container).not.toBeNull();",
            "\t});",
            "",
            "\tit(\"should match snapshot\", () => {",
            "\t\tconst { container } = renderComponent(PROPS);"
        ],
        "description": "testing library boilerplate"
    },

    "React TypeScript Functional Component": {
        "scope": "typescriptreact",
        "prefix": "TS FC",
        "description": "",

        "body": [
            "const ${1:Component} = ({ ${2:prop} }: {",
            "\t${2:prop}: undefined",
            "}) => {",
            "\treturn (",
            "",
            "\t)",
            "}"
        ]
    },

    "component docs": {
        "prefix": "comp-doc",
        "body": [
            "/**",
            " * ${1:comment}",
            " *",
            " * ## Install",
            " *",
            " * ```sh",
            " * npm i boondoggle",
            " * ```",
            " *",
            " * ## Usage",
            " *",
            " * ```ts",
            " * import { ${2:component}, type ${2:component}Props } from \"boondoggle/${2:component}\"",
            " * ```",
            " */"
        ]
    },

    "Storybook story": {
        "scope": "typescriptreact",
        "prefix": "story",
        "description": "Simple Storybook story",
        "body": [
            "import { ${1:Component} } from \"..\";",
            "",
            "import { Meta, StoryObj } from \"@storybook/react\";",
            "",
            "const meta = {",
            "  title: \"Components/${1:Component}\",",
            "  component: ${1:Component},",
            "  args: {  },",
            "} satisfies Meta<typeof ${1:Component}>;",
            "",
            "export default meta;",
            "type Story = StoryObj<typeof meta>;",
            "",
            "export const Default: Story = {};"
        ]
    }
}
