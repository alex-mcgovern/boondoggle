import{j as p}from"./jsx-runtime-_e34SzbC.js";import{c as B}from"./clsx-B-dksMZM.js";import{$ as W}from"./Button-CRilbH_o.js";import{a as M,b as F,c as j,$ as L}from"./OverlayArrow-B-Xywokp.js";import{h as U,b as P,c as k,k as z,$ as K,i as Y,f as G,j as J,d as Q}from"./utils-gqPcjMo1.js";import{$ as X,a as Z}from"./useFocusable-CezXxk4q.js";import{R as d,r as i}from"./index-DVXBtNgz.js";import{c as ee,j as te,h as ae}from"./focusSafely-BjTjzja3.js";import{$ as S}from"./useFocusRing-BcDOnnS6.js";import{Y as ne}from"./index-BAqkEV4U.js";import{I as re}from"./index-Dd7Evjo_.js";const w=d.createContext(null);function le(e){let{children:t}=e,a=i.useContext(w),[l,o]=i.useState(0),s=i.useMemo(()=>({parent:a,modalCount:l,addModal(){o(n=>n+1),a&&a.addModal()},removeModal(){o(n=>n-1),a&&a.removeModal()}}),[a,l]);return d.createElement(w.Provider,{value:s},t)}function oe(){let e=i.useContext(w);return{modalProviderProps:{"aria-hidden":e&&e.modalCount>0?!0:null}}}function ie(e){let{modalProviderProps:t}=oe();return d.createElement("div",{"data-overlay-container":!0,...e,...t})}function se(e){return d.createElement(le,null,d.createElement(ie,e))}function de(e){let t=U(),{portalContainer:a=t?null:document.body,...l}=e;if(d.useEffect(()=>{if(a!=null&&a.closest("[data-overlay-container]"))throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.")},[a]),!a)return null;let o=d.createElement(se,l);return ne.createPortal(o,a)}function ue(e,t){let a=ee(e,{labelable:!0}),{hoverProps:l}=S({onHoverStart:()=>t==null?void 0:t.open(!0),onHoverEnd:()=>t==null?void 0:t.close()});return{tooltipProps:P(a,l,{role:"tooltip"})}}function ce(e,t,a){let{isDisabled:l,trigger:o}=e,s=k(),n=i.useRef(!1),r=i.useRef(!1),m=()=>{(n.current||r.current)&&t.open(r.current)},u=y=>{!n.current&&!r.current&&t.close(y)};i.useEffect(()=>{let y=q=>{a&&a.current&&q.key==="Escape"&&(q.stopPropagation(),t.close(!0))};if(t.isOpen)return document.addEventListener("keydown",y,!0),()=>{document.removeEventListener("keydown",y,!0)}},[a,t]);let h=()=>{o!=="focus"&&(te()==="pointer"?n.current=!0:n.current=!1,m())},$=()=>{o!=="focus"&&(r.current=!1,n.current=!1,u())},T=()=>{r.current=!1,n.current=!1,u(!0)},c=()=>{ae()&&(r.current=!0,m())},_=()=>{r.current=!1,n.current=!1,u(!0)},{hoverProps:D}=S({isDisabled:l,onHoverStart:h,onHoverEnd:$}),{focusableProps:A}=X({isDisabled:l,onFocus:c,onBlur:_},a);return{triggerProps:{"aria-describedby":t.isOpen?s:void 0,...P(A,D,{onPointerDown:T,onKeyDown:T})},tooltipProps:{id:s}}}const fe=1500,x=500;let b={},pe=0,v=!1,f=null,g=null;function H(e={}){let{delay:t=fe,closeDelay:a=x}=e,{isOpen:l,open:o,close:s}=M(e),n=i.useMemo(()=>`${++pe}`,[]),r=i.useRef(),m=()=>{b[n]=$},u=()=>{for(let c in b)c!==n&&(b[c](!0),delete b[c])},h=()=>{clearTimeout(r.current),r.current=null,u(),m(),v=!0,o(),f&&(clearTimeout(f),f=null),g&&(clearTimeout(g),g=null)},$=c=>{c||a<=0?(clearTimeout(r.current),r.current=null,s()):r.current||(r.current=setTimeout(()=>{r.current=null,s()},a)),f&&(clearTimeout(f),f=null),v&&(g&&clearTimeout(g),g=setTimeout(()=>{delete b[n],g=null,v=!1},Math.max(x,a)))},T=()=>{u(),m(),!l&&!f&&!v?f=setTimeout(()=>{f=null,v=!0,h()},t):l||h()};return i.useEffect(()=>()=>{clearTimeout(r.current),b[n]&&delete b[n]},[n]),{isOpen:l,open:c=>{!c&&t>0&&!r.current?T():h()},close:$}}const V=i.createContext(null),N=i.createContext(null);function me(e){let t=H(e),a=i.useRef(null),{triggerProps:l,tooltipProps:o}=ce(e,t,a);return d.createElement(z,{values:[[V,t],[N,{...o,triggerRef:a}]]},d.createElement(Z,{...l,ref:a},e.children))}function he({UNSTABLE_portalContainer:e,...t},a){[t,a]=K(t,a,N);let l=i.useContext(V),o=H(t),s=t.isOpen!=null||t.defaultOpen!=null||!l?o:l,n=Y(a,s.isOpen)||t.isExiting||!1;return!s.isOpen&&!n?null:d.createElement(de,{portalContainer:e},d.createElement(ge,{...t,tooltipRef:a,isExiting:n}))}const be=i.forwardRef(he);function ge(e){let t=i.useContext(V),a=i.useRef(null),[l,o]=i.useState(0);G(()=>{a.current&&t.isOpen&&o(a.current.getBoundingClientRect().width)},[t.isOpen,a]);let{overlayProps:s,arrowProps:n,placement:r}=F({placement:e.placement||"top",targetRef:e.triggerRef,overlayRef:e.tooltipRef,offset:e.offset,crossOffset:e.crossOffset,isOpen:t.isOpen,arrowSize:l,arrowBoundaryOffset:e.arrowBoundaryOffset,shouldFlip:e.shouldFlip}),m=J(e.tooltipRef,!!r)||e.isEntering||!1,u=Q({...e,defaultClassName:"react-aria-Tooltip",values:{placement:r,isEntering:m,isExiting:e.isExiting,state:t}});e=P(e,s);let{tooltipProps:h}=ue(e,t);return d.createElement("div",{...h,ref:e.tooltipRef,...u,style:{...s.style,...u.style},"data-placement":r,"data-entering":m||void 0,"data-exiting":e.isExiting||void 0},d.createElement(j.Provider,{value:{...n,placement:r,ref:a}},u.children))}var I={},R={};(function(e){Object.defineProperty(e,"__esModule",{value:!0});var t="fas",a="circle-info",l=512,o=512,s=["info-circle"],n="f05a",r="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM216 336h24V272H216c-13.3 0-24-10.7-24-24s10.7-24 24-24h48c13.3 0 24 10.7 24 24v88h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H216c-13.3 0-24-10.7-24-24s10.7-24 24-24zm40-208a32 32 0 1 1 0 64 32 32 0 1 1 0-64z";e.definition={prefix:t,iconName:a,icon:[l,o,s,n,r]},e.faCircleInfo=e.definition,e.prefix=t,e.iconName=a,e.width=l,e.height=o,e.ligatures=s,e.unicode=n,e.svgPathData=r,e.aliases=s})(R);(function(e){Object.defineProperty(e,"__esModule",{value:!0});var t=R;e.definition={prefix:t.prefix,iconName:t.iconName,icon:[t.width,t.height,t.aliases,t.unicode,t.svgPathData]},e.faInfoCircle=e.definition,e.prefix=t.prefix,e.iconName=t.iconName,e.width=t.width,e.height=t.height,e.ligatures=t.aliases,e.unicode=t.unicode,e.svgPathData=t.svgPathData,e.aliases=t.aliases})(I);function E(e){return p.jsx(W,{slot:"clear",...e,className:B(e.className,"tooltip-trigger-btn"),excludeFromTabOrder:!0,children:p.jsx(re,{icon:I.faInfoCircle})})}function O({closeDelay:e,delay:t=0,...a}){return p.jsx(me,{...a,closeDelay:e,delay:t,children:a.children})}function C(e){return p.jsx(be,{...e,className:"tooltip",offset:6,children:t=>p.jsxs(p.Fragment,{children:[p.jsx(L,{className:"overlay-arrow",children:p.jsx("svg",{height:8,viewBox:"0 0 8 8",width:8,children:p.jsx("path",{d:"M0 0 L4 4 L8 0"})})}),typeof e.children=="function"?e.children(t):e.children]})})}try{E.displayName="TooltipTriggerButton",E.__docgenInfo={description:"The TooltipTriggerButton component is a default button with an info icon that can be composed with a TooltipTrigger to show a tooltip.",displayName:"TooltipTriggerButton",props:{name:{defaultValue:null,description:"Submitted as a pair with the button's value as part of the form data.",name:"name",required:!1,type:{name:"string"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: ButtonRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: ButtonRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},value:{defaultValue:null,description:"The value associated with the button's name when it's submitted with the form data.",name:"value",required:!1,type:{name:"string"}},isDisabled:{defaultValue:null,description:"Whether the button is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},"aria-controls":{defaultValue:null,description:"Identifies the element (or elements) whose contents or presence are controlled by the current element.",name:"aria-controls",required:!1,type:{name:"string"}},excludeFromTabOrder:{defaultValue:null,description:`Whether to exclude the element from the sequential tab order. If true,
the element will not be focusable via the keyboard by tabbing. This should
be avoided except in rare scenarios where an alternative means of accessing
the element or its functionality via the keyboard is available.`,name:"excludeFromTabOrder",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},onHoverStart:{defaultValue:null,description:"Handler that is called when a hover interaction starts.",name:"onHoverStart",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverEnd:{defaultValue:null,description:"Handler that is called when a hover interaction ends.",name:"onHoverEnd",required:!1,type:{name:"(e: HoverEvent) => void"}},onHoverChange:{defaultValue:null,description:"Handler that is called when the hover state changes.",name:"onHoverChange",required:!1,type:{name:"(isHovering: boolean) => void"}},onPress:{defaultValue:null,description:"Handler that is called when the press is released over the target.",name:"onPress",required:!1,type:{name:"(e: PressEvent) => void"}},onPressStart:{defaultValue:null,description:"Handler that is called when a press interaction starts.",name:"onPressStart",required:!1,type:{name:"(e: PressEvent) => void"}},onPressEnd:{defaultValue:null,description:`Handler that is called when a press interaction ends, either
over the target or when the pointer leaves the target.`,name:"onPressEnd",required:!1,type:{name:"(e: PressEvent) => void"}},onPressChange:{defaultValue:null,description:"Handler that is called when the press state changes.",name:"onPressChange",required:!1,type:{name:"(isPressed: boolean) => void"}},onPressUp:{defaultValue:null,description:`Handler that is called when a press is released over the target, regardless of
whether it started on the target or not.`,name:"onPressUp",required:!1,type:{name:"(e: PressEvent) => void"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "true" | "false"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "true" | "false" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-pressed":{defaultValue:null,description:'Indicates the current "pressed" state of toggle buttons.',name:"aria-pressed",required:!1,type:{name:'boolean | "true" | "false" | "mixed"'}},type:{defaultValue:{value:"'button'"},description:"The behavior of the button when used in an HTML form.",name:"type",required:!1,type:{name:'"button" | "submit" | "reset"'}},form:{defaultValue:null,description:"The `<form>` element to associate the button with.\nThe value of this attribute must be the id of a `<form>` in the same document.",name:"form",required:!1,type:{name:"string"}},formAction:{defaultValue:null,description:`The URL that processes the information submitted by the button.
Overrides the action attribute of the button's form owner.`,name:"formAction",required:!1,type:{name:"string"}},formEncType:{defaultValue:null,description:"Indicates how to encode the form data that is submitted.",name:"formEncType",required:!1,type:{name:"string"}},formMethod:{defaultValue:null,description:"Indicates the HTTP method used to submit the form.",name:"formMethod",required:!1,type:{name:"string"}},formNoValidate:{defaultValue:null,description:"Indicates that the form is not to be validated when it is submitted.",name:"formNoValidate",required:!1,type:{name:"boolean"}},formTarget:{defaultValue:null,description:"Overrides the target attribute of the button's form owner.",name:"formTarget",required:!1,type:{name:"string"}}}}}catch{}try{O.displayName="TooltipTrigger",O.__docgenInfo={description:`The TooltipTrigger component does not render any DOM elements itself, but instead triggers a tooltip to appear when hovered or focused.
[Built with React Aria Tooltip](https://react-spectrum.adobe.com/react-aria/TooltipTrigger.html)`,displayName:"TooltipTrigger",props:{isDisabled:{defaultValue:null,description:"Whether the tooltip should be disabled, independent from the trigger.",name:"isDisabled",required:!1,type:{name:"boolean"}},delay:{defaultValue:{value:"0"},description:"The delay time for the tooltip to show up. [See guidelines](https://spectrum.adobe.com/page/tooltip/#Immediate-or-delayed-appearance).",name:"delay",required:!1,type:{name:"number"}},closeDelay:{defaultValue:{value:"500"},description:"The delay time for the tooltip to close. [See guidelines](https://spectrum.adobe.com/page/tooltip/#Warmup-and-cooldown).",name:"closeDelay",required:!1,type:{name:"number"}},trigger:{defaultValue:null,description:"By default, opens for both focus and hover. Can be made to open only for focus.",name:"trigger",required:!1,type:{name:'"focus"'}},isOpen:{defaultValue:null,description:"Whether the overlay is open by default (controlled).",name:"isOpen",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}}}}}catch{}try{C.displayName="Tooltip",C.__docgenInfo={description:'A tooltip displays a description of an element on hover or focus. [Built with React Aria Tooltip](https://react-spectrum.adobe.com/react-aria/Tooltip.html)\n\n## Install\n\n```sh\nnpm i boondoggle\n```\n\n## Usage\n\n```ts\nimport { Tooltip, TooltipTriggerButton, TooltipTrigger } from "boondoggle";\n```',displayName:"Tooltip",props:{triggerRef:{defaultValue:null,description:`The ref for the element which the tooltip positions itself with respect to.

When used within a TooltipTrigger this is set automatically. It is only required when used standalone.`,name:"triggerRef",required:!1,type:{name:"RefObject<Element>"}},isEntering:{defaultValue:null,description:"Whether the tooltip is currently performing an entry animation.",name:"isEntering",required:!1,type:{name:"boolean"}},isExiting:{defaultValue:null,description:"Whether the tooltip is currently performing an exit animation.",name:"isExiting",required:!1,type:{name:"boolean"}},UNSTABLE_portalContainer:{defaultValue:{value:"document.body"},description:"The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",name:"UNSTABLE_portalContainer",required:!1,type:{name:"Element"}},placement:{defaultValue:{value:"'bottom'"},description:"The placement of the element with respect to its anchor element.",name:"placement",required:!1,type:{name:"Placement"}},containerPadding:{defaultValue:{value:"12"},description:`The placement padding that should be applied between the element and its
surrounding container.`,name:"containerPadding",required:!1,type:{name:"number"}},offset:{defaultValue:{value:"0"},description:`The additional offset applied along the main axis between the element and its
anchor element.`,name:"offset",required:!1,type:{name:"number"}},crossOffset:{defaultValue:{value:"0"},description:`The additional offset applied along the cross axis between the element and its
anchor element.`,name:"crossOffset",required:!1,type:{name:"number"}},shouldFlip:{defaultValue:{value:"true"},description:`Whether the element should flip its orientation (e.g. top to bottom or left to right) when
there is insufficient room for it to render completely.`,name:"shouldFlip",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:null,description:"Whether the element is rendered.",name:"isOpen",required:!1,type:{name:"boolean"}},arrowBoundaryOffset:{defaultValue:{value:"0"},description:"The minimum distance the arrow's edge should be from the edge of the overlay element.",name:"arrowBoundaryOffset",required:!1,type:{name:"number"}},defaultOpen:{defaultValue:null,description:"Whether the overlay is open by default (uncontrolled).",name:"defaultOpen",required:!1,type:{name:"boolean"}},onOpenChange:{defaultValue:null,description:"Handler that is called when the overlay's open state changes.",name:"onOpenChange",required:!1,type:{name:"(isOpen: boolean) => void"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: TooltipRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: TooltipRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: TooltipRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}}}}}catch{}export{O as T,E as a,C as b};
