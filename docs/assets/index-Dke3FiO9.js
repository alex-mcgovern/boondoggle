import{j as f}from"./jsx-runtime-_e34SzbC.js";import{c as oe}from"./clsx-B-dksMZM.js";import{a as ae,b as le,c as re,d as ne,$ as z}from"./Separator-BcI5PY_4.js";import{g as ie,h as de,i as se,j as ce,k as G,l as ue,m as pe,$ as fe}from"./SelectionManager-aXHASKXM.js";import{c as J,a as F,m as j,o as me,b as he,p as be,d as q,k as Q,q as $e,l as ve,$ as X}from"./utils-Bc7mYRVy.js";import{$ as N,a as ge,b as ye}from"./useDragAndDrop-Bx5vVxjn.js";import{a as xe,$ as R}from"./Text-ASgkQgU-.js";import{c as A,b as Pe,h as K}from"./focusSafely-ZnAb2dR5.js";import{r as u,R as i}from"./index-DVXBtNgz.js";import{$ as Se}from"./useListState-DoxrlYrD.js";import{$ as De}from"./context-N9YhJwDt.js";import{$ as we}from"./useCollator-AnMYaOym.js";import{$ as ke}from"./ListKeyboardDelegate-xBcl24u2.js";import{c as Ve}from"./useField-Cy0r8us6.js";import{a as Ee}from"./openLink-D2-6eagY.js";import{a as Ie,b as Be}from"./platform-Dv8lzYqa.js";import{$ as Y,a as Fe}from"./useFocusRing-Dauh53Lh.js";import{a as He}from"./FocusScope-D1zDAIyn.js";import{C as Te}from"./index-Cofv3URU.js";import{i as _e}from"./i18n-BYVObd3f.js";/* empty css                      */const U=new WeakMap;function Ae(e){return typeof e=="string"?e.replace(/\s*/g,""):""+e}function Me(e,t){let a=U.get(e);if(!a)throw new Error("Unknown list");return`${a.id}-option-${Ae(t)}`}function Ce(e,t,a){let o=A(e,{labelable:!0}),r=e.selectionBehavior||"toggle",n=e.linkBehavior||(r==="replace"?"action":"override");r==="toggle"&&n==="action"&&(n="override");let{listProps:l}=ae({...e,ref:a,selectionManager:t.selectionManager,collection:t.collection,disabledKeys:t.disabledKeys,linkBehavior:n}),{focusWithinProps:h}=Pe({onFocusWithin:e.onFocus,onBlurWithin:e.onBlur,onFocusWithinChange:e.onFocusChange}),d=J(e.id);U.set(t,{id:d,shouldUseVirtualFocus:e.shouldUseVirtualFocus,shouldSelectOnPressUp:e.shouldSelectOnPressUp,shouldFocusOnHover:e.shouldFocusOnHover,isVirtualized:e.isVirtualized,onAction:e.onAction,linkBehavior:n});let{labelProps:m,fieldProps:s}=Ve({...e,id:d,labelElementType:"span"});return{labelProps:m,listBoxProps:F(o,h,t.selectionManager.selectionMode==="multiple"?{"aria-multiselectable":"true"}:{},{role:"listbox",...F(s,l)})}}function Le(e,t,a){var o,r;let{key:n}=e,l=U.get(t);var h;let d=(h=e.isDisabled)!==null&&h!==void 0?h:t.selectionManager.isDisabled(n);var m;let s=(m=e.isSelected)!==null&&m!==void 0?m:t.selectionManager.isSelected(n);var y;let b=(y=e.shouldSelectOnPressUp)!==null&&y!==void 0?y:l==null?void 0:l.shouldSelectOnPressUp;var $;let p=($=e.shouldFocusOnHover)!==null&&$!==void 0?$:l==null?void 0:l.shouldFocusOnHover;var P;let k=(P=e.shouldUseVirtualFocus)!==null&&P!==void 0?P:l==null?void 0:l.shouldUseVirtualFocus;var S;let w=(S=e.isVirtualized)!==null&&S!==void 0?S:l==null?void 0:l.isVirtualized,D=j(),x=j(),v={role:"option","aria-disabled":d||void 0,"aria-selected":t.selectionManager.selectionMode!=="none"?s:void 0};Ie()&&Be()||(v["aria-label"]=e["aria-label"],v["aria-labelledby"]=D,v["aria-describedby"]=x);let c=t.collection.getItem(n);if(w){let V=Number(c==null?void 0:c.index);v["aria-posinset"]=Number.isNaN(V)?void 0:V+1,v["aria-setsize"]=le(t.collection)}let E=l!=null&&l.onAction?()=>{var V;return l==null||(V=l.onAction)===null||V===void 0?void 0:V.call(l,n)}:void 0,{itemProps:H,isPressed:C,isFocused:I,hasAction:T,allowsSelection:_}=ie({selectionManager:t.selectionManager,key:n,ref:a,shouldSelectOnPressUp:b,allowsDifferentPressOrigin:b&&p,isVirtualized:w,shouldUseVirtualFocus:k,isDisabled:d,onAction:E||!(c==null||(o=c.props)===null||o===void 0)&&o.onAction?me(c==null||(r=c.props)===null||r===void 0?void 0:r.onAction,E):void 0,linkBehavior:l==null?void 0:l.linkBehavior}),{hoverProps:L}=Y({isDisabled:d||!p,onHoverStart(){K()||(t.selectionManager.setFocused(!0),t.selectionManager.setFocusedKey(n))}}),B=A(c==null?void 0:c.props);delete B.id;let g=Ee(c==null?void 0:c.props);return{optionProps:{...v,...F(B,H,L,g),id:Me(t,n)},labelProps:{id:D},descriptionProps:{id:x},isFocused:I,isFocusVisible:I&&K(),isSelected:s,isDisabled:d,isPressed:C,allowsSelection:_,hasAction:T}}function qe(e){let{heading:t,"aria-label":a}=e,o=J();return{itemProps:{role:"presentation"},headingProps:t?{id:o,role:"presentation"}:{},groupProps:{role:"group","aria-label":a,"aria-labelledby":t?o:void 0}}}const Z=u.createContext(null),M=u.createContext(null);function Ne(e,t){[e,t]=he(e,t,Z);let a=u.useContext(be),o=u.useContext(M);return u.useContext(de)?i.createElement(se,e):o?a?null:i.createElement(ee,{state:o,props:e,listBoxRef:t}):i.createElement(Ue,{props:e,listBoxRef:t})}function Ue({props:e,listBoxRef:t}){let{portal:a,collection:o}=ce(e);e={...e,collection:o,children:null,items:null};let r=Se(e);return i.createElement(i.Fragment,null,a,i.createElement(ee,{state:r,props:e,listBoxRef:t}))}const je=u.forwardRef(Ne);function ee({state:e,props:t,listBoxRef:a}){let{dragAndDropHooks:o,layout:r="stack",orientation:n="vertical"}=t,{collection:l,selectionManager:h}=e,d=!!(o!=null&&o.useDraggableCollectionState),m=!!(o!=null&&o.useDroppableCollectionState),{direction:s}=De(),{disabledBehavior:y,disabledKeys:b}=h,$=we({usage:"search",sensitivity:"base"}),p=u.useMemo(()=>t.keyboardDelegate||new ke({collection:l,collator:$,ref:a,disabledKeys:b,disabledBehavior:y,layout:r,orientation:n,direction:s}),[l,$,a,y,b,n,s,t.keyboardDelegate,r]),{listBoxProps:P}=Ce({...t,shouldSelectOnPressUp:d||t.shouldSelectOnPressUp,keyboardDelegate:p},e,a),k=G({items:l,children:g=>{switch(g.type){case"section":return i.createElement(Re,{section:g});case"separator":return i.createElement(re,g.props);case"item":return i.createElement(te,{item:g});default:throw new Error("Unsupported node type in Menu: "+g.type)}}}),S=u.useRef(d),w=u.useRef(m);u.useEffect(()=>{S.current!==d&&console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior."),w.current!==m&&console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.")},[d,m]);let D,x,v,c=!1,E=null,H=u.useRef(null);if(d&&o){D=o.useDraggableCollectionState({collection:l,selectionManager:h,preview:o.renderDragPreview?H:void 0}),o.useDraggableCollection({},D,a);let g=o.DragPreview;E=o.renderDragPreview?i.createElement(g,{ref:H},o.renderDragPreview):null}if(m&&o){x=o.useDroppableCollectionState({collection:l,selectionManager:h});let g=o.dropTargetDelegate||new o.ListDropTargetDelegate(l,a,{orientation:n,layout:r,direction:s});v=o.useDroppableCollection({keyboardDelegate:p,dropTargetDelegate:g},x,a),c=x.isDropTarget({type:"root"})}let{focusProps:C,isFocused:I,isFocusVisible:T}=Fe(),_={isDropTarget:c,isEmpty:e.collection.size===0,isFocused:I,isFocusVisible:T,layout:t.layout||"stack",state:e},L=q({className:t.className,style:t.style,defaultClassName:"react-aria-ListBox",values:_}),B=null;return e.collection.size===0&&t.renderEmptyState&&(B=i.createElement("div",{role:"option",style:{display:"contents"}},t.renderEmptyState(_))),i.createElement(He,null,i.createElement("div",{...A(t),...F(P,C,v==null?void 0:v.collectionProps),...L,ref:a,slot:t.slot||void 0,onScroll:t.onScroll,"data-drop-target":c||void 0,"data-empty":e.collection.size===0||void 0,"data-focused":I||void 0,"data-focus-visible":T||void 0,"data-layout":t.layout||"stack","data-orientation":t.orientation||"vertical"},i.createElement(Q,{values:[[Z,t],[M,e],[N,{dragAndDropHooks:o,dragState:D,dropState:x}],[ne,{elementType:"div"}],[ge,{render:ze}]]},k),B,E))}function Re({section:e,className:t,style:a}){var o,r;let n=u.useContext(M),[l,h]=$e();var d;let{headingProps:m,groupProps:s}=qe({heading:h,"aria-label":(d=e.props["aria-label"])!==null&&d!==void 0?d:void 0}),y=G({items:n.collection.getChildren(e.key),children:b=>{switch(b.type){case"header":return i.createElement(Ke,{item:b,headingProps:m,headingRef:l});case"item":return i.createElement(te,{item:b});default:throw new Error("Unsupported element type in Section: "+b.type)}}});return i.createElement("section",{...A(e.props),...s,className:t||((o=e.props)===null||o===void 0?void 0:o.className)||"react-aria-Section",style:a||((r=e.props)===null||r===void 0?void 0:r.style),ref:e.props.ref},y)}function Ke({item:e,headingProps:t,headingRef:a}){let{ref:o,...r}=e.props;return i.createElement(z,{...t,...r,ref:ve(a,o)},e.rendered)}function Oe(e,t){return ue("item",e,t,e.children)}const We=u.forwardRef(Oe);function te({item:e}){var t;let a=X(e.props.ref),o=u.useContext(M),{dragAndDropHooks:r,dragState:n,dropState:l}=u.useContext(N),{optionProps:h,labelProps:d,descriptionProps:m,...s}=Le({key:e.key,"aria-label":(t=e.props)===null||t===void 0?void 0:t["aria-label"]},o,a),{hoverProps:y,isHovered:b}=Y({isDisabled:!s.allowsSelection&&!s.hasAction,onHoverStart:e.props.onHoverStart,onHoverChange:e.props.onHoverChange,onHoverEnd:e.props.onHoverEnd}),$=null;n&&r&&($=r.useDraggableItem({key:e.key},n));let p=null;l&&r&&(p=r.useDroppableItem({target:{type:"item",key:e.key,dropPosition:"on"}},l,a));let P=e.props,k=n&&n.isDragging(e.key),S=q({...P,id:void 0,children:e.rendered,defaultClassName:"react-aria-ListBoxItem",values:{...s,isHovered:b,selectionMode:o.selectionManager.selectionMode,selectionBehavior:o.selectionManager.selectionBehavior,allowsDragging:!!n,isDragging:k,isDropTarget:p==null?void 0:p.isDropTarget}}),w=(r==null?void 0:r.renderDropIndicator)||(x=>i.createElement(ye,{target:x}));u.useEffect(()=>{e.textValue||console.warn("A `textValue` prop is required for <ListBoxItem> elements with non-plain text children in order to support accessibility features such as type to select.")},[e.textValue]);let D=P.href?"a":"div";return i.createElement(i.Fragment,null,(r==null?void 0:r.useDropIndicator)&&w({type:"item",key:e.key,dropPosition:"before"}),i.createElement(D,{...F(h,y,$==null?void 0:$.dragProps,p==null?void 0:p.dropProps),...S,ref:a,"data-allows-dragging":!!n||void 0,"data-selected":s.isSelected||void 0,"data-disabled":s.isDisabled||void 0,"data-hovered":b||void 0,"data-focused":s.isFocused||void 0,"data-focus-visible":s.isFocusVisible||void 0,"data-pressed":s.isPressed||void 0,"data-dragging":k||void 0,"data-drop-target":(p==null?void 0:p.isDropTarget)||void 0,"data-selection-mode":o.selectionManager.selectionMode==="none"?void 0:o.selectionManager.selectionMode},i.createElement(Q,{values:[[xe,{slots:{label:d,description:m}}]]},S.children)),(r==null?void 0:r.useDropIndicator)&&o.collection.getKeyAfter(e.key)==null&&w({type:"item",key:e.key,dropPosition:"after"}))}function ze(e,t){t=X(t);let{dragAndDropHooks:a,dropState:o}=u.useContext(N),{dropIndicatorProps:r,isHidden:n,isDropTarget:l}=a.useDropIndicator(e,o,t);return n?null:i.createElement(Je,{...e,dropIndicatorProps:r,isDropTarget:l,ref:t})}function Ge(e,t){let{dropIndicatorProps:a,isDropTarget:o,...r}=e,n=q({...r,defaultClassName:"react-aria-DropIndicator",values:{isDropTarget:o}});return i.createElement("div",{...a,...n,role:"option",ref:t,"data-drop-target":o||void 0})}const Je=u.forwardRef(Ge);function Qe(e){return f.jsx(fe,{className:"dropdown-menu-section",...e})}function O({icon:e,value:t,...a}){return f.jsx(We,{className:oe(a.className,"dropdown-menu-item",{"has-icon":!!e}),href:t==null?void 0:t.href,value:t,...a,children:o=>f.jsxs(f.Fragment,{children:[e?f.jsx("div",{className:"menu-item-icon",children:e}):null,f.jsxs("div",{children:[f.jsx(R,{className:"dropdown-menu-item-name",slot:"label",children:t==null?void 0:t.name}),f.jsx(R,{className:"dropdown-menu-item-description",slot:"description",children:t==null?void 0:t.description})]}),o.selectionMode!=="none"?f.jsx(Te,{isSelected:o.isSelected}):null]})})}function W({...e}){return f.jsx(je,{className:"dropdown-menu",renderEmptyState:()=>f.jsx("div",{children:_e.no_results}),...e,children:t=>t.children?f.jsxs(Qe,{children:[t.name?f.jsx(z,{className:"dropdown-menu-section-header",children:t.name}):null,f.jsx(pe,{items:t.children,children:a=>f.jsx(O,{icon:a.slotLeft,textValue:a.name,value:a})})]}):f.jsx(O,{icon:t.slotLeft,textValue:t.name,value:t})})}try{W.displayName="ListBox",W.__docgenInfo={description:"A listbox displays a list of options and allows a user to select one or more of them. [Built with React Aria ListBox component](https://react-spectrum.adobe.com/react-aria/ListBox.html)",displayName:"ListBox",props:{selectionBehavior:{defaultValue:null,description:"How multiple selection should behave in the collection.",name:"selectionBehavior",required:!1,type:{name:"SelectionBehavior"}},dragAndDropHooks:{defaultValue:null,description:"The drag and drop hooks returned by `useDragAndDrop` used to enable drag and drop behavior for the ListBox.",name:"dragAndDropHooks",required:!1,type:{name:"DragAndDropHooks"}},renderEmptyState:{defaultValue:null,description:"Provides content to display when there are no items in the list.",name:"renderEmptyState",required:!1,type:{name:"(props: ListBoxRenderProps) => ReactNode"}},layout:{defaultValue:{value:"'stack'"},description:"Whether the items are arranged in a stack or grid.",name:"layout",required:!1,type:{name:'"grid" | "stack"'}},orientation:{defaultValue:{value:"'vertical'"},description:`The primary orientation of the items. Usually this is the
direction that the collection scrolls.`,name:"orientation",required:!1,type:{name:"Orientation"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},autoFocus:{defaultValue:null,description:"Whether to auto focus the listbox or an option.",name:"autoFocus",required:!1,type:{name:"boolean | FocusStrategy"}},disallowEmptySelection:{defaultValue:null,description:"Whether the collection allows empty selection.",name:"disallowEmptySelection",required:!1,type:{name:"boolean"}},onSelectionChange:{defaultValue:null,description:"Handler that is called when the selection changes.",name:"onSelectionChange",required:!1,type:{name:"(keys: Selection) => void"}},shouldFocusWrap:{defaultValue:null,description:"Whether focus should wrap around when the end/start is reached.",name:"shouldFocusWrap",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"Item objects in the collection.",name:"items",required:!1,type:{name:"Iterable<IterableListBoxItem<TItemId>>"}},disabledKeys:{defaultValue:null,description:"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",name:"disabledKeys",required:!1,type:{name:"Iterable<Key>"}},onAction:{defaultValue:null,description:"Handler that is called when a user performs an action on an item. The exact user event depends on\nthe collection's `selectionBehavior` prop and the interaction modality.",name:"onAction",required:!1,type:{name:"(key: Key) => void"}},selectionMode:{defaultValue:null,description:"The type of selection that is allowed in the collection.",name:"selectionMode",required:!1,type:{name:"SelectionMode"}},selectedKeys:{defaultValue:null,description:"The currently selected keys in the collection (controlled).",name:"selectedKeys",required:!1,type:{name:'Iterable<Key> | "all"'}},defaultSelectedKeys:{defaultValue:null,description:"The initial selected keys in the collection (uncontrolled).",name:"defaultSelectedKeys",required:!1,type:{name:'Iterable<Key> | "all"'}},children:{defaultValue:null,description:"The contents of the collection.",name:"children",required:!1,type:{name:"ReactNode | ((item: IterableListBoxItem<TItemId>) => ReactNode)"}},dependencies:{defaultValue:null,description:"Values that should invalidate the item cache when using dynamic collections.",name:"dependencies",required:!1,type:{name:"any[]"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: ListBoxRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: ListBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},onScroll:{defaultValue:null,description:"Handler that is called when a user scrolls. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event).",name:"onScroll",required:!1,type:{name:"(e: UIEvent<HTMLDivElement, UIEvent>) => void"}}}}}catch{}export{Z as $,W as L,M as a,U as b,Me as c};
