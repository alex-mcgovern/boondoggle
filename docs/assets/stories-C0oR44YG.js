import{j as o}from"./jsx-runtime-_e34SzbC.js";import{c as ye}from"./clsx-B-dksMZM.js";import{r as u,R as X}from"./index-DVXBtNgz.js";import{f as $a}from"./faPlus-DNNFQylq.js";import{a as ya}from"./Button-B4zfvGBi.js";import{g as ga,b as U,e as J,o as xa,$ as Va,r as Ea,q as Fa,n as Na,c as La,k as Sa}from"./utils-QLlwGfKe.js";import{a as Da}from"./FieldError-RByZL9Bv.js";import{$ as Pa}from"./Form-BnTBccM9.js";import{a as Ca}from"./Group-47snG8Nx.js";import{a as Ia}from"./Input-COjRcM5I.js";import{a as Ma}from"./Label-BuSsJeIu.js";import{a as Ba}from"./Text-Bv8JiQ2q.js";import{b as qa,c as ge}from"./focusSafely-N6uhGZIJ.js";import{$ as xe}from"./context-BNGJTqTl.js";import{$ as wa}from"./useControlledState-DO5k2rCg.js";import{d as N,e as Q}from"./OverlayArrow-C7u8HHrZ.js";import{d as Ha,$ as Ta}from"./useField-BcuuhgyM.js";import{$ as ae,a as Aa,b as Ra}from"./useSpinButton-DI3V0wqR.js";import{h as _a,e as Wa,f as ja}from"./platform-Dv8lzYqa.js";import{$ as Ua}from"./useFormReset-Ez7gb77e.js";import{c as ka}from"./useFocusRing-DDn0T9K6.js";import{$ as Oa}from"./useEvent-CnG6jsAm.js";import{$ as za}from"./useTextField-HDxiN6Aj.js";import{$ as Ka}from"./useLocalizedStringFormatter-wEL_tslA.js";import{u as Ga,a as Za}from"./index.esm-L49qWB8P.js";import{F as Ve}from"./index-Dch8SxO1.js";import{F as Ya}from"./index-CtECsIbV.js";import{I as Ee}from"./index-Cwo7oab1.js";import{G as Xa}from"./index-MafQd7N9.js";import{I as le}from"./index-Bl0GuFLJ.js";import{L as re}from"./index-DnNPXN33.js";import{S as Ja,a as Qa}from"./index-CxQI3kNJ.js";import{T as et}from"./index-CpvI2iDZ.js";function at(e,a){let{onScroll:t,isDisabled:r}=e,s=u.useCallback(i=>{i.ctrlKey||(i.preventDefault(),i.stopPropagation(),t&&t({deltaX:i.deltaX,deltaY:i.deltaY}))},[t]);Oa(a,"wheel",r?void 0:s)}function he(e={}){let{locale:a}=xe();return u.useMemo(()=>new ae(a,e),[a,e])}function ve(){return typeof window<"u"&&window.InputEvent&&typeof InputEvent.prototype.getTargetRanges=="function"}function tt(e,a,t){let r=ga(l=>{let n=t.current,f;switch(l.inputType){case"historyUndo":case"historyRedo":return;case"insertLineBreak":return;case"deleteContent":case"deleteByCut":case"deleteByDrag":f=n.value.slice(0,n.selectionStart)+n.value.slice(n.selectionEnd);break;case"deleteContentForward":f=n.selectionEnd===n.selectionStart?n.value.slice(0,n.selectionStart)+n.value.slice(n.selectionEnd+1):n.value.slice(0,n.selectionStart)+n.value.slice(n.selectionEnd);break;case"deleteContentBackward":f=n.selectionEnd===n.selectionStart?n.value.slice(0,n.selectionStart-1)+n.value.slice(n.selectionStart):n.value.slice(0,n.selectionStart)+n.value.slice(n.selectionEnd);break;case"deleteSoftLineBackward":case"deleteHardLineBackward":f=n.value.slice(n.selectionStart);break;default:l.data!=null&&(f=n.value.slice(0,n.selectionStart)+l.data+n.value.slice(n.selectionEnd));break}(f==null||!a.validate(f))&&l.preventDefault()});u.useEffect(()=>{if(!ve())return;let l=t.current;return l.addEventListener("beforeinput",r,!1),()=>{l.removeEventListener("beforeinput",r,!1)}},[t,r]);let s=ve()?null:l=>{let n=l.target.value.slice(0,l.target.selectionStart)+l.data+l.target.value.slice(l.target.selectionEnd);a.validate(n)||l.preventDefault()},{labelProps:i,inputProps:c,descriptionProps:p,errorMessageProps:m,...h}=za(e,t),$=u.useRef(null);return{inputProps:U(c,{onBeforeInput:s,onCompositionStart(){let{value:l,selectionStart:n,selectionEnd:f}=t.current;$.current={value:l,selectionStart:n,selectionEnd:f}},onCompositionEnd(){if(!a.validate(t.current.value)){let{value:l,selectionStart:n,selectionEnd:f}=$.current;t.current.value=l,t.current.setSelectionRange(n,f),a.setInputValue(l)}}}),labelProps:i,descriptionProps:p,errorMessageProps:m,...h}}var Fe={};Fe={decrease:e=>`خفض ${e.fieldLabel}`,increase:e=>`زيادة ${e.fieldLabel}`,numberField:"حقل رقمي"};var Ne={};Ne={decrease:e=>`Намаляване ${e.fieldLabel}`,increase:e=>`Усилване ${e.fieldLabel}`,numberField:"Номер на полето"};var Le={};Le={decrease:e=>`Snížit ${e.fieldLabel}`,increase:e=>`Zvýšit ${e.fieldLabel}`,numberField:"Číselné pole"};var Se={};Se={decrease:e=>`Reducer ${e.fieldLabel}`,increase:e=>`Øg ${e.fieldLabel}`,numberField:"Talfelt"};var De={};De={decrease:e=>`${e.fieldLabel} verringern`,increase:e=>`${e.fieldLabel} erhöhen`,numberField:"Nummernfeld"};var Pe={};Pe={decrease:e=>`Μείωση ${e.fieldLabel}`,increase:e=>`Αύξηση ${e.fieldLabel}`,numberField:"Πεδίο αριθμού"};var Ce={};Ce={decrease:e=>`Decrease ${e.fieldLabel}`,increase:e=>`Increase ${e.fieldLabel}`,numberField:"Number field"};var Ie={};Ie={decrease:e=>`Reducir ${e.fieldLabel}`,increase:e=>`Aumentar ${e.fieldLabel}`,numberField:"Campo de número"};var Me={};Me={decrease:e=>`Vähenda ${e.fieldLabel}`,increase:e=>`Suurenda ${e.fieldLabel}`,numberField:"Numbri väli"};var Be={};Be={decrease:e=>`Vähennä ${e.fieldLabel}`,increase:e=>`Lisää ${e.fieldLabel}`,numberField:"Numerokenttä"};var qe={};qe={decrease:e=>`Diminuer ${e.fieldLabel}`,increase:e=>`Augmenter ${e.fieldLabel}`,numberField:"Champ de nombre"};var we={};we={decrease:e=>`הקטן ${e.fieldLabel}`,increase:e=>`הגדל ${e.fieldLabel}`,numberField:"שדה מספר"};var He={};He={decrease:e=>`Smanji ${e.fieldLabel}`,increase:e=>`Povećaj ${e.fieldLabel}`,numberField:"Polje broja"};var Te={};Te={decrease:e=>`${e.fieldLabel} csökkentése`,increase:e=>`${e.fieldLabel} növelése`,numberField:"Számmező"};var Ae={};Ae={decrease:e=>`Riduci ${e.fieldLabel}`,increase:e=>`Aumenta ${e.fieldLabel}`,numberField:"Campo numero"};var Re={};Re={decrease:e=>`${e.fieldLabel}を縮小`,increase:e=>`${e.fieldLabel}を拡大`,numberField:"数値フィールド"};var _e={};_e={decrease:e=>`${e.fieldLabel} 감소`,increase:e=>`${e.fieldLabel} 증가`,numberField:"번호 필드"};var We={};We={decrease:e=>`Sumažinti ${e.fieldLabel}`,increase:e=>`Padidinti ${e.fieldLabel}`,numberField:"Numerio laukas"};var je={};je={decrease:e=>`Samazināšana ${e.fieldLabel}`,increase:e=>`Palielināšana ${e.fieldLabel}`,numberField:"Skaitļu lauks"};var Ue={};Ue={decrease:e=>`Reduser ${e.fieldLabel}`,increase:e=>`Øk ${e.fieldLabel}`,numberField:"Tallfelt"};var ke={};ke={decrease:e=>`${e.fieldLabel} verlagen`,increase:e=>`${e.fieldLabel} verhogen`,numberField:"Getalveld"};var Oe={};Oe={decrease:e=>`Zmniejsz ${e.fieldLabel}`,increase:e=>`Zwiększ ${e.fieldLabel}`,numberField:"Pole numeru"};var ze={};ze={decrease:e=>`Diminuir ${e.fieldLabel}`,increase:e=>`Aumentar ${e.fieldLabel}`,numberField:"Campo de número"};var Ke={};Ke={decrease:e=>`Diminuir ${e.fieldLabel}`,increase:e=>`Aumentar ${e.fieldLabel}`,numberField:"Campo numérico"};var Ge={};Ge={decrease:e=>`Scădere ${e.fieldLabel}`,increase:e=>`Creștere ${e.fieldLabel}`,numberField:"Câmp numeric"};var Ze={};Ze={decrease:e=>`Уменьшение ${e.fieldLabel}`,increase:e=>`Увеличение ${e.fieldLabel}`,numberField:"Числовое поле"};var Ye={};Ye={decrease:e=>`Znížiť ${e.fieldLabel}`,increase:e=>`Zvýšiť ${e.fieldLabel}`,numberField:"Číselné pole"};var Xe={};Xe={decrease:e=>`Upadati ${e.fieldLabel}`,increase:e=>`Povečajte ${e.fieldLabel}`,numberField:"Številčno polje"};var Je={};Je={decrease:e=>`Smanji ${e.fieldLabel}`,increase:e=>`Povećaj ${e.fieldLabel}`,numberField:"Polje broja"};var Qe={};Qe={decrease:e=>`Minska ${e.fieldLabel}`,increase:e=>`Öka ${e.fieldLabel}`,numberField:"Nummerfält"};var ea={};ea={decrease:e=>`${e.fieldLabel} azalt`,increase:e=>`${e.fieldLabel} arttır`,numberField:"Sayı alanı"};var aa={};aa={decrease:e=>`Зменшити ${e.fieldLabel}`,increase:e=>`Збільшити ${e.fieldLabel}`,numberField:"Поле номера"};var ta={};ta={decrease:e=>`降低 ${e.fieldLabel}`,increase:e=>`提高 ${e.fieldLabel}`,numberField:"数字字段"};var na={};na={decrease:e=>`縮小 ${e.fieldLabel}`,increase:e=>`放大 ${e.fieldLabel}`,numberField:"數字欄位"};var la={};la={"ar-AE":Fe,"bg-BG":Ne,"cs-CZ":Le,"da-DK":Se,"de-DE":De,"el-GR":Pe,"en-US":Ce,"es-ES":Ie,"et-EE":Me,"fi-FI":Be,"fr-FR":qe,"he-IL":we,"hr-HR":He,"hu-HU":Te,"it-IT":Ae,"ja-JP":Re,"ko-KR":_e,"lt-LT":We,"lv-LV":je,"nb-NO":Ue,"nl-NL":ke,"pl-PL":Oe,"pt-BR":ze,"pt-PT":Ke,"ro-RO":Ge,"ru-RU":Ze,"sk-SK":Ye,"sl-SI":Xe,"sr-SP":Je,"sv-SE":Qe,"tr-TR":ea,"uk-UA":aa,"zh-CN":ta,"zh-TW":na};function nt(e){return e&&e.__esModule?e.default:e}function lt(e,a,t){let{id:r,decrementAriaLabel:s,incrementAriaLabel:i,isDisabled:c,isReadOnly:p,isRequired:m,minValue:h,maxValue:$,autoFocus:l,label:n,formatOptions:f,onBlur:g=()=>{},onFocus:V,onFocusChange:I,onKeyDown:F,onKeyUp:L,description:x,errorMessage:E,isWheelDisabled:v,...k}=e,{increment:B,incrementToMax:O,decrement:q,decrementToMin:z,numberValue:M,inputValue:b,commit:w,commitValidation:H}=a;const T=Ka(nt(la),"@react-aria/numberfield");let A=J(r),{focusProps:K}=ka({onBlur(){w()}}),_=he(f),G=u.useMemo(()=>_.resolvedOptions(),[_]),W=he({...f,currencySign:void 0}),ie=u.useMemo(()=>isNaN(M)?"":W.format(M),[W,M]),{spinButtonProps:d,incrementButtonProps:j,decrementButtonProps:S}=Aa({isDisabled:c,isReadOnly:p,isRequired:m,maxValue:$,minValue:h,onIncrement:B,onIncrementToMax:O,onDecrement:q,onDecrementToMin:z,value:M,textValue:ie}),[D,ia]=u.useState(!1),{focusWithinProps:oa}=qa({isDisabled:c,onFocusWithinChange:ia}),sa=u.useCallback(y=>{Math.abs(y.deltaY)<=Math.abs(y.deltaX)||(y.deltaY>0?B():y.deltaY<0&&q())},[q,B]);at({onScroll:sa,isDisabled:v||c||p||!D},t);let oe=G.maximumFractionDigits>0,se=a.minValue===void 0||isNaN(a.minValue)||a.minValue<0,R="numeric";_a()?se?R="text":oe&&(R="decimal"):Wa()&&(se?R="numeric":oe&&(R="decimal"));let ua=y=>{a.validate(y)&&a.setInputValue(y)},da=ge(e),ue=u.useCallback(y=>{y.key==="Enter"?(w(),H()):y.continuePropagation()},[w,H]),{isInvalid:de,validationErrors:ca,validationDetails:ma}=a.displayValidation,{labelProps:ce,inputProps:fa,descriptionProps:pa,errorMessageProps:ba}=tt({...k,...da,name:void 0,label:n,autoFocus:l,isDisabled:c,isReadOnly:p,isRequired:m,validate:void 0,[Ha]:a,value:b,defaultValue:void 0,autoComplete:"off","aria-label":e["aria-label"]||void 0,"aria-labelledby":e["aria-labelledby"]||void 0,id:A,type:"text",inputMode:R,onChange:ua,onBlur:g,onFocus:V,onFocusChange:I,onKeyDown:u.useMemo(()=>xa(ue,F),[ue,F]),onKeyUp:L,description:x,errorMessage:E},a,t);Ua(t,a.numberValue,a.setNumberValue);let me=U(d,K,fa,{role:null,"aria-roledescription":ja()?null:T.format("numberField"),"aria-valuemax":null,"aria-valuemin":null,"aria-valuenow":null,"aria-valuetext":null,autoCorrect:"off",spellCheck:"false"});e.validationBehavior==="native"&&(me["aria-required"]=void 0);let fe=y=>{var Y;document.activeElement!==t.current&&(y.pointerType==="mouse"?(Y=t.current)===null||Y===void 0||Y.focus():y.target.focus())},Z=e["aria-label"]||(typeof e.label=="string"?e.label:""),P;Z||(P=e.label!=null?ce.id:e["aria-labelledby"]);let pe=J(),be=J(),ha=U(j,{"aria-label":i||T.format("increase",{fieldLabel:Z}).trim(),id:P&&!i?pe:null,"aria-labelledby":P&&!i?`${pe} ${P}`:null,"aria-controls":A,excludeFromTabOrder:!0,preventFocusOnPress:!0,allowFocusWhenDisabled:!0,isDisabled:!a.canIncrement,onPressStart:fe}),va=U(S,{"aria-label":s||T.format("decrease",{fieldLabel:Z}).trim(),id:P&&!s?be:null,"aria-labelledby":P&&!s?`${be} ${P}`:null,"aria-controls":A,excludeFromTabOrder:!0,preventFocusOnPress:!0,allowFocusWhenDisabled:!0,isDisabled:!a.canDecrement,onPressStart:fe});return{groupProps:{...oa,role:"group","aria-disabled":c,"aria-invalid":de?"true":void 0},labelProps:ce,inputProps:me,incrementButtonProps:ha,decrementButtonProps:va,errorMessageProps:ba,descriptionProps:pa,isInvalid:de,validationErrors:ca,validationDetails:ma}}function rt(e){let{minValue:a,maxValue:t,step:r,formatOptions:s,value:i,defaultValue:c=NaN,onChange:p,locale:m,isDisabled:h,isReadOnly:$}=e;i===null&&(i=NaN),i!==void 0&&!isNaN(i)&&(r!==void 0&&!isNaN(r)?i=N(i,a,t,r):i=Q(i,a,t)),isNaN(c)||(r!==void 0&&!isNaN(r)?c=N(c,a,t,r):c=Q(c,a,t));let[l,n]=wa(i,isNaN(c)?NaN:c,p),[f,g]=u.useState(()=>isNaN(l)?"":new ae(m,s).format(l)),V=u.useMemo(()=>new Ra(m,s),[m,s]),I=u.useMemo(()=>V.getNumberingSystem(f),[V,f]),F=u.useMemo(()=>new ae(m,{...s,numberingSystem:I}),[m,s,I]),L=u.useMemo(()=>F.resolvedOptions(),[F]),x=u.useCallback(d=>isNaN(d)||d===null?"":F.format(d),[F]),E=Ta({...e,value:l}),v=r!==void 0&&!isNaN(r)?r:1;L.style==="percent"&&(r===void 0||isNaN(r))&&(v=.01);let[k,B]=u.useState(l),[O,q]=u.useState(m),[z,M]=u.useState(s);(!Object.is(l,k)||m!==O||s!==z)&&(g(x(l)),B(l),q(m),M(s));let b=u.useMemo(()=>V.parse(f),[V,f]),w=()=>{if(!f.length){n(NaN),g(i===void 0?"":x(l));return}if(isNaN(b)){g(x(l));return}let d;r===void 0||isNaN(r)?d=Q(b,a,t):d=N(b,a,t,r),d=V.parse(x(d)),n(d),g(x(i===void 0?d:l))},H=(d,j=0)=>{let S=b;if(isNaN(S)){let D=isNaN(j)?0:j;return N(D,a,t,v)}else{let D=N(S,a,t,v);return d==="+"&&D>S||d==="-"&&D<S?D:N(ee(d,S,v),a,t,v)}},T=()=>{let d=H("+",a);d===l&&g(x(d)),n(d),E.commitValidation()},A=()=>{let d=H("-",t);d===l&&g(x(d)),n(d),E.commitValidation()},K=()=>{t!=null&&(n(N(t,a,t,v)),E.commitValidation())},_=()=>{a!=null&&(n(a),E.commitValidation())},G=u.useMemo(()=>!h&&!$&&(isNaN(b)||t===void 0||isNaN(t)||N(b,a,t,v)>b||ee("+",b,v)<=t),[h,$,a,t,v,b]),W=u.useMemo(()=>!h&&!$&&(isNaN(b)||a===void 0||isNaN(a)||N(b,a,t,v)<b||ee("-",b,v)>=a),[h,$,a,t,v,b]);return{...E,validate:d=>V.isValidPartialNumber(d,a,t),increment:T,incrementToMax:K,decrement:A,decrementToMin:_,canIncrement:G,canDecrement:W,minValue:a,maxValue:t,numberValue:b,setNumberValue:n,setInputValue:g,inputValue:f,commit:w}}function ee(e,a,t){let r=e==="+"?a+t:a-t;if(a%1!==0||t%1!==0){const s=a.toString().split("."),i=t.toString().split("."),c=s[1]&&s[1].length||0,p=i[1]&&i[1].length||0,m=Math.pow(10,Math.max(c,p));a=Math.round(a*m),t=Math.round(t*m),r=e==="+"?a+t:a-t,r/=m}return r}const it=u.createContext(null),ot=u.createContext(null);function st(e,a){[e,a]=Va(e,a,it);let{validationBehavior:t}=Ea(Pa)||{};var r,s;let i=(s=(r=e.validationBehavior)!==null&&r!==void 0?r:t)!==null&&s!==void 0?s:"native",{locale:c}=xe(),p=rt({...e,locale:c,validationBehavior:i}),m=u.useRef(null),[h,$]=Fa(),{labelProps:l,groupProps:n,inputProps:f,incrementButtonProps:g,decrementButtonProps:V,descriptionProps:I,errorMessageProps:F,...L}=lt({...Na(e),label:$,validationBehavior:i},p,m),x=La({...e,values:{state:p,isDisabled:e.isDisabled||!1,isInvalid:L.isInvalid||!1},defaultClassName:"react-aria-NumberField"}),E=ge(e);return delete E.id,X.createElement(Sa,{values:[[ot,p],[Ca,n],[Ia,{...f,ref:m}],[Ma,{...l,ref:h}],[ya,{slots:{increment:g,decrement:V}}],[Ba,{slots:{description:I,errorMessage:F}}],[Da,L]]},X.createElement("div",{...E,...x,ref:a,slot:e.slot||void 0,"data-disabled":e.isDisabled||void 0,"data-invalid":L.isInvalid||void 0}),e.name&&X.createElement("input",{type:"hidden",name:e.name,value:isNaN(p.numberValue)?"":p.numberValue}))}const ut=u.forwardRef(st);var ra={};(function(e){Object.defineProperty(e,"__esModule",{value:!0});var a="fas",t="minus",r=448,s=512,i=[8211,8722,10134,"subtract"],c="f068",p="M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z";e.definition={prefix:a,iconName:t,icon:[r,s,i,c,p]},e.faMinus=e.definition,e.prefix=a,e.iconName=t,e.width=r,e.height=s,e.ligatures=i,e.unicode=c,e.svgPathData=p,e.aliases=i})(ra);function te(){return o.jsx(Ve,{slot:"increment",children:o.jsx(Ee,{icon:$a.faPlus})})}function ne(){return o.jsx(Ve,{slot:"decrement",children:o.jsx(Ee,{icon:ra.faMinus})})}const C=u.forwardRef((e,a)=>o.jsx(ut,{...e,className:ye(e.className,"number-field"),ref:a}));function $e({children:e,...a}){if(!a.name)throw new Error("FormNumberField requires a name prop");const{control:t}=Ga(),{field:{disabled:r,name:s,onBlur:i,onChange:c,ref:p,value:m=""},fieldState:{error:h,invalid:$}}=Za({control:t,defaultValue:a.value||a.defaultValue,disabled:a.isDisabled,name:a.name});return o.jsx(C,{...a,defaultValue:m,isDisabled:r,isInvalid:$,name:s,onBlur:i,onChange:l=>{var n;c(l),(n=a.onChange)==null||n.call(a,l)},ref:p,validationBehavior:"aria",value:m,children:l=>o.jsxs(o.Fragment,{children:[typeof e=="function"?e(l):e,o.jsx(Ya,{children:h==null?void 0:h.message})]})})}try{te.displayName="NumberFieldIncrementButton",te.__docgenInfo={description:"A `FieldButton` to decrement the number field value. [Built with React Button component](https://react-spectrum.adobe.com/react-aria/Button.html)",displayName:"NumberFieldIncrementButton",props:{}}}catch{}try{ne.displayName="NumberFieldDecrementButton",ne.__docgenInfo={description:"A `FieldButton` to increment the number field value. [Built with React Button component](https://react-spectrum.adobe.com/react-aria/Button.html)",displayName:"NumberFieldDecrementButton",props:{}}}catch{}try{$e.displayName="FormNumberField",$e.__docgenInfo={description:"A form number field connects a `NumberField` to a `Form` component using `react-hook-form`.\n\n[React Aria Documentation](https://react-spectrum.adobe.com/react-aria/NumberField.html)",displayName:"FormNumberField",props:{minValue:{defaultValue:null,description:"The smallest value allowed for the input.",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"The largest value allowed for the input.",name:"maxValue",required:!1,type:{name:"number"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"number"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: number) => void"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: number) => true | ValidationError"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onSelect:{defaultValue:null,description:"Handler that is called when text in the input is selected. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event).",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLInputElement>"}},onCopy:{defaultValue:null,description:"Handler that is called when the user copies text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncopy).",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCut:{defaultValue:null,description:"Handler that is called when the user cuts text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncut).",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onPaste:{defaultValue:null,description:"Handler that is called when the user pastes text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste).",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCompositionEnd:{defaultValue:null,description:"Handler that is called when a text composition system completes or cancels the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event).",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionStart:{defaultValue:null,description:"Handler that is called when a text composition system starts a new text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event).",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionUpdate:{defaultValue:null,description:"Handler that is called when a new character is received in the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event).",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onBeforeInput:{defaultValue:null,description:"Handler that is called when the input value is about to be modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event).",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},onInput:{defaultValue:null,description:"Handler that is called when the input value is modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event).",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},step:{defaultValue:null,description:'The amount that the input value changes with each increment or decrement "tick".',name:"step",required:!1,type:{name:"number"}},decrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the decrement button. If not provided, the localized string "Decrement" is used.',name:"decrementAriaLabel",required:!1,type:{name:"string"}},incrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the increment button. If not provided, the localized string "Increment" is used.',name:"incrementAriaLabel",required:!1,type:{name:"string"}},isWheelDisabled:{defaultValue:null,description:"Enables or disables changing the value with scroll.",name:"isWheelDisabled",required:!1,type:{name:"boolean"}},formatOptions:{defaultValue:null,description:`Formatting options for the value displayed in the number field.
This also affects what characters are allowed to be typed by the user.`,name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: NumberFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: NumberFieldRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: NumberFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLInputElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}}}catch{}try{C.displayName="NumberField",C.__docgenInfo={description:'A number field allows a user to enter a number, and increment or decrement the value using stepper buttons. [Built with React Aria NumberField component](https://react-spectrum.adobe.com/react-aria/NumberField.html)\n\n## Install\n\n```sh\nnpm i boondoggle\n```\n\n## Usage\n\n```ts\nimport { NumberField } from "boondoggle";\n```',displayName:"NumberField",props:{minValue:{defaultValue:null,description:"The smallest value allowed for the input.",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"The largest value allowed for the input.",name:"maxValue",required:!1,type:{name:"number"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"number"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: number) => void"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: number) => true | ValidationError"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onSelect:{defaultValue:null,description:"Handler that is called when text in the input is selected. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event).",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLInputElement>"}},onCopy:{defaultValue:null,description:"Handler that is called when the user copies text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncopy).",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCut:{defaultValue:null,description:"Handler that is called when the user cuts text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncut).",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onPaste:{defaultValue:null,description:"Handler that is called when the user pastes text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste).",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCompositionEnd:{defaultValue:null,description:"Handler that is called when a text composition system completes or cancels the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event).",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionStart:{defaultValue:null,description:"Handler that is called when a text composition system starts a new text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event).",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionUpdate:{defaultValue:null,description:"Handler that is called when a new character is received in the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event).",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onBeforeInput:{defaultValue:null,description:"Handler that is called when the input value is about to be modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event).",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},onInput:{defaultValue:null,description:"Handler that is called when the input value is modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event).",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},step:{defaultValue:null,description:'The amount that the input value changes with each increment or decrement "tick".',name:"step",required:!1,type:{name:"number"}},decrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the decrement button. If not provided, the localized string "Decrement" is used.',name:"decrementAriaLabel",required:!1,type:{name:"string"}},incrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the increment button. If not provided, the localized string "Increment" is used.',name:"incrementAriaLabel",required:!1,type:{name:"string"}},isWheelDisabled:{defaultValue:null,description:"Enables or disables changing the value with scroll.",name:"isWheelDisabled",required:!1,type:{name:"boolean"}},formatOptions:{defaultValue:null,description:`Formatting options for the value displayed in the number field.
This also affects what characters are allowed to be typed by the user.`,name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: NumberFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: NumberFieldRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: NumberFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLInputElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}}}catch{}const dt={args:{},component:C,decorators:[e=>o.jsxs(o.Fragment,{children:[o.jsx(et,{}),o.jsx(e,{})]})],render:e=>o.jsxs(C,{...e,children:[o.jsx(re,{children:"Label"}),o.jsx(le,{})]}),title:"Components/NumberField"},ct={},mt={args:{isInvalid:!0}},ft={args:{formatOptions:{style:"percent"},maxValue:1,minValue:0,step:.01}},pt={args:{children:o.jsxs(o.Fragment,{children:[o.jsx(re,{children:"Count"}),o.jsxs(Xa,{children:[o.jsx(le,{unstyled:!0}),o.jsx(ne,{}),o.jsx(te,{})]})]}),step:100},render:e=>o.jsx(C,{...e})},bt={args:{defaultValue:42000.69,id:"amount",name:"amount"},render:()=>{const[e,a]=u.useState("EUR");return o.jsxs("div",{className:"mb-2",children:[o.jsx(re,{htmlFor:"amount",children:"Amount"}),o.jsxs("div",{className:ye("flex","gap-2","align-center"),children:[o.jsx(C,{defaultValue:42000.69,formatOptions:{currency:e,currencyDisplay:"code",style:"currency"},id:"amount",name:"amount",children:o.jsx(le,{})}),o.jsx(Ja,{"aria-label":"Currency",items:[{id:"EUR",name:"EUR"},{id:"USD",name:"USD"},{id:"GBP",name:"GBP"}],onSelectionChange:t=>{a(t)},placement:"bottom end",selectedKey:e,children:o.jsx(Qa,{})})]})]})}},Yt=Object.freeze(Object.defineProperty({__proto__:null,Default:ct,IncrementDecrement:pt,Invalid:mt,Percent:ft,WithCurrencySelect:bt,default:dt},Symbol.toStringTag,{value:"Module"}));export{ct as D,C as N,Yt as s};
