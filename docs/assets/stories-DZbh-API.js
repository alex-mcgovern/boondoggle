import{j as t}from"./jsx-runtime-_e34SzbC.js";import{b as v,$ as D,j as _,k as O,d as g,a as w}from"./utils-9Msfu4Q8.js";import{c as F}from"./focusSafely-Cv_PksxV.js";import{r as R,R as f}from"./index-DVXBtNgz.js";import{$ as I,a as L}from"./useToggleState-DDx_N9rR.js";import{a as N,$ as E}from"./useFocusRing-DXKnJiZy.js";import{$ as C}from"./VisuallyHidden-bhCtNSx7.js";function H(e,a,o){let{labelProps:c,inputProps:d,isSelected:i,isPressed:n,isDisabled:l,isReadOnly:r}=I(e,a,o);return{labelProps:c,inputProps:{...d,role:"switch",checked:i},isSelected:i,isPressed:n,isDisabled:l,isReadOnly:r}}const V=R.createContext(null);function k(e,a){let{inputRef:o=null,...c}=e;[e,a]=v(c,a,V);let d=D(_(o,e.inputRef!==void 0?e.inputRef:null)),i=L(e),{labelProps:n,inputProps:l,isSelected:r,isDisabled:u,isReadOnly:$,isPressed:b}=H({...O(e),children:typeof e.children=="function"?!0:e.children},i,d),{isFocused:p,isFocusVisible:h,focusProps:S}=N(),y=e.isDisabled||e.isReadOnly,{hoverProps:j,isHovered:m}=E({...e,isDisabled:y}),x=g({...e,defaultClassName:"react-aria-Switch",values:{isSelected:r,isPressed:b,isHovered:m,isFocused:p,isFocusVisible:h,isDisabled:u,isReadOnly:$,state:i}}),P=F(e);return delete P.id,f.createElement("label",{...w(P,n,j,x),ref:a,slot:e.slot||void 0,"data-selected":r||void 0,"data-pressed":b||void 0,"data-hovered":m||void 0,"data-focused":p||void 0,"data-focus-visible":h||void 0,"data-disabled":u||void 0,"data-readonly":$||void 0},f.createElement(C,{elementType:"span"},f.createElement("input",{...w(l,S),ref:d})),x.children)}const A=R.forwardRef(k);function M(e){return t.jsx("span",{className:"switch-label",children:e.children})}function T(){return t.jsx("div",{className:"switch-indicator"})}function z({...e}){return t.jsx(A,{className:"switch",...e})}const s={Indicator:T,Label:M,Root:z};try{s.displayName="Switch",s.__docgenInfo={description:"A switch allows a user to turn a setting on or off. [Built with React Aria Switch](https://react-spectrum.adobe.com/react-aria/Switch.html)",displayName:"Switch",props:{}}}catch{}const B={component:s.Root,title:"Components/Switch"},q={args:{children:t.jsxs(t.Fragment,{children:[t.jsx(s.Label,{children:"Low power mode"}),t.jsx(s.Indicator,{})]})}},G={args:{children:t.jsxs(t.Fragment,{children:[t.jsx(s.Indicator,{}),t.jsx(s.Label,{children:"Low power mode"})]})}},Z=Object.freeze(Object.defineProperty({__proto__:null,Default:q,Reversed:G,default:B},Symbol.toStringTag,{value:"Module"}));export{q as D,G as R,s as S,Z as s};
