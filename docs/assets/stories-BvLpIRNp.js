import{j as n}from"./jsx-runtime-_e34SzbC.js";import{c as re}from"./clsx-B-dksMZM.js";import{r as u,R as X}from"./index-DVXBtNgz.js";import{f as ya}from"./faPlus-DNNFQylq.js";import{a as ga}from"./Button-CCYCZxsW.js";import{f as xa,a as W,b as J,l as Va,$ as Ea,p as Fa,o as Na,k as La,d as Sa,n as Da}from"./utils-DJbZa_IK.js";import{a as Pa}from"./FieldError-DztlAQZG.js";import{$ as Ca}from"./Form-BnTBccM9.js";import{a as wa}from"./Group-64kkNqPz.js";import{a as _a}from"./Input-CL8PycDY.js";import{a as Ia}from"./Label-Dze1OFf_.js";import{a as Ma}from"./Text-Dje1MlzB.js";import{$ as Ha,c as xe}from"./focusSafely-BjFYYYEp.js";import{$ as Ve}from"./context-bfltU5m3.js";import{$ as Ba}from"./useControlledState-DO5k2rCg.js";import{e as N,f as Q}from"./OverlayArrow-Cysrqfca.js";import{d as qa,$ as Ta}from"./useField-necAhpoZ.js";import{$ as ae,a as Aa,b as ja}from"./useSpinButton-BVIQb5lF.js";import{h as Ra,e as ka,f as Wa}from"./platform-Dv8lzYqa.js";import{$ as Ua}from"./useFormReset-YLDGm2ha.js";import{c as za}from"./useFocusRing-ONODwrZO.js";import{$ as Oa}from"./useEvent-BPWJQnkZ.js";import{$ as Ka}from"./useTextField-B8Q-4duf.js";import{$ as Ga}from"./useLocalizedStringFormatter-JAxdz5_z.js";import{u as Za,a as Ya}from"./index.esm-oJwJgW9d.js";import{F as Ee}from"./index-DtvM2cex.js";import{F as Xa}from"./index-BbIWUphv.js";import{I as Fe}from"./index-DiMb0VE6.js";import{G as Ja}from"./index-Be1YUZoi.js";/* empty css               */import{F as Qa,a as et}from"./us-DWRiNyQ-.js";import{I as ie}from"./index-C7_1Plop.js";import{L as oe}from"./index-qNk3i0w2.js";import{S as at,a as tt}from"./index-DOIUa38M.js";import{T as nt}from"./index-CpvI2iDZ.js";function lt(e,a){let{onScroll:t,isDisabled:i}=e,s=u.useCallback(o=>{o.ctrlKey||(o.preventDefault(),o.stopPropagation(),t&&t({deltaX:o.deltaX,deltaY:o.deltaY}))},[t]);Oa(a,"wheel",i?void 0:s)}function $e(e={}){let{locale:a}=Ve();return u.useMemo(()=>new ae(a,e),[a,e])}function ye(){return typeof window<"u"&&window.InputEvent&&typeof InputEvent.prototype.getTargetRanges=="function"}function rt(e,a,t){let i=xa(r=>{let l=t.current,f;switch(r.inputType){case"historyUndo":case"historyRedo":return;case"insertLineBreak":return;case"deleteContent":case"deleteByCut":case"deleteByDrag":f=l.value.slice(0,l.selectionStart)+l.value.slice(l.selectionEnd);break;case"deleteContentForward":f=l.selectionEnd===l.selectionStart?l.value.slice(0,l.selectionStart)+l.value.slice(l.selectionEnd+1):l.value.slice(0,l.selectionStart)+l.value.slice(l.selectionEnd);break;case"deleteContentBackward":f=l.selectionEnd===l.selectionStart?l.value.slice(0,l.selectionStart-1)+l.value.slice(l.selectionStart):l.value.slice(0,l.selectionStart)+l.value.slice(l.selectionEnd);break;case"deleteSoftLineBackward":case"deleteHardLineBackward":f=l.value.slice(l.selectionStart);break;default:r.data!=null&&(f=l.value.slice(0,l.selectionStart)+r.data+l.value.slice(l.selectionEnd));break}(f==null||!a.validate(f))&&r.preventDefault()});u.useEffect(()=>{if(!ye())return;let r=t.current;return r.addEventListener("beforeinput",i,!1),()=>{r.removeEventListener("beforeinput",i,!1)}},[t,i]);let s=ye()?null:r=>{let l=r.target.value.slice(0,r.target.selectionStart)+r.data+r.target.value.slice(r.target.selectionEnd);a.validate(l)||r.preventDefault()},{labelProps:o,inputProps:c,descriptionProps:p,errorMessageProps:m,...y}=Ka(e,t),h=u.useRef(null);return{inputProps:W(c,{onBeforeInput:s,onCompositionStart(){let{value:r,selectionStart:l,selectionEnd:f}=t.current;h.current={value:r,selectionStart:l,selectionEnd:f}},onCompositionEnd(){if(!a.validate(t.current.value)){let{value:r,selectionStart:l,selectionEnd:f}=h.current;t.current.value=r,t.current.setSelectionRange(l,f),a.setInputValue(r)}}}),labelProps:o,descriptionProps:p,errorMessageProps:m,...y}}var Ne={};Ne={decrease:e=>`خفض ${e.fieldLabel}`,increase:e=>`زيادة ${e.fieldLabel}`,numberField:"حقل رقمي"};var Le={};Le={decrease:e=>`Намаляване ${e.fieldLabel}`,increase:e=>`Усилване ${e.fieldLabel}`,numberField:"Номер на полето"};var Se={};Se={decrease:e=>`Snížit ${e.fieldLabel}`,increase:e=>`Zvýšit ${e.fieldLabel}`,numberField:"Číselné pole"};var De={};De={decrease:e=>`Reducer ${e.fieldLabel}`,increase:e=>`Øg ${e.fieldLabel}`,numberField:"Talfelt"};var Pe={};Pe={decrease:e=>`${e.fieldLabel} verringern`,increase:e=>`${e.fieldLabel} erhöhen`,numberField:"Nummernfeld"};var Ce={};Ce={decrease:e=>`Μείωση ${e.fieldLabel}`,increase:e=>`Αύξηση ${e.fieldLabel}`,numberField:"Πεδίο αριθμού"};var we={};we={decrease:e=>`Decrease ${e.fieldLabel}`,increase:e=>`Increase ${e.fieldLabel}`,numberField:"Number field"};var _e={};_e={decrease:e=>`Reducir ${e.fieldLabel}`,increase:e=>`Aumentar ${e.fieldLabel}`,numberField:"Campo de número"};var Ie={};Ie={decrease:e=>`Vähenda ${e.fieldLabel}`,increase:e=>`Suurenda ${e.fieldLabel}`,numberField:"Numbri väli"};var Me={};Me={decrease:e=>`Vähennä ${e.fieldLabel}`,increase:e=>`Lisää ${e.fieldLabel}`,numberField:"Numerokenttä"};var He={};He={decrease:e=>`Diminuer ${e.fieldLabel}`,increase:e=>`Augmenter ${e.fieldLabel}`,numberField:"Champ de nombre"};var Be={};Be={decrease:e=>`הקטן ${e.fieldLabel}`,increase:e=>`הגדל ${e.fieldLabel}`,numberField:"שדה מספר"};var qe={};qe={decrease:e=>`Smanji ${e.fieldLabel}`,increase:e=>`Povećaj ${e.fieldLabel}`,numberField:"Polje broja"};var Te={};Te={decrease:e=>`${e.fieldLabel} csökkentése`,increase:e=>`${e.fieldLabel} növelése`,numberField:"Számmező"};var Ae={};Ae={decrease:e=>`Riduci ${e.fieldLabel}`,increase:e=>`Aumenta ${e.fieldLabel}`,numberField:"Campo numero"};var je={};je={decrease:e=>`${e.fieldLabel}を縮小`,increase:e=>`${e.fieldLabel}を拡大`,numberField:"数値フィールド"};var Re={};Re={decrease:e=>`${e.fieldLabel} 감소`,increase:e=>`${e.fieldLabel} 증가`,numberField:"번호 필드"};var ke={};ke={decrease:e=>`Sumažinti ${e.fieldLabel}`,increase:e=>`Padidinti ${e.fieldLabel}`,numberField:"Numerio laukas"};var We={};We={decrease:e=>`Samazināšana ${e.fieldLabel}`,increase:e=>`Palielināšana ${e.fieldLabel}`,numberField:"Skaitļu lauks"};var Ue={};Ue={decrease:e=>`Reduser ${e.fieldLabel}`,increase:e=>`Øk ${e.fieldLabel}`,numberField:"Tallfelt"};var ze={};ze={decrease:e=>`${e.fieldLabel} verlagen`,increase:e=>`${e.fieldLabel} verhogen`,numberField:"Getalveld"};var Oe={};Oe={decrease:e=>`Zmniejsz ${e.fieldLabel}`,increase:e=>`Zwiększ ${e.fieldLabel}`,numberField:"Pole numeru"};var Ke={};Ke={decrease:e=>`Diminuir ${e.fieldLabel}`,increase:e=>`Aumentar ${e.fieldLabel}`,numberField:"Campo de número"};var Ge={};Ge={decrease:e=>`Diminuir ${e.fieldLabel}`,increase:e=>`Aumentar ${e.fieldLabel}`,numberField:"Campo numérico"};var Ze={};Ze={decrease:e=>`Scădere ${e.fieldLabel}`,increase:e=>`Creștere ${e.fieldLabel}`,numberField:"Câmp numeric"};var Ye={};Ye={decrease:e=>`Уменьшение ${e.fieldLabel}`,increase:e=>`Увеличение ${e.fieldLabel}`,numberField:"Числовое поле"};var Xe={};Xe={decrease:e=>`Znížiť ${e.fieldLabel}`,increase:e=>`Zvýšiť ${e.fieldLabel}`,numberField:"Číselné pole"};var Je={};Je={decrease:e=>`Upadati ${e.fieldLabel}`,increase:e=>`Povečajte ${e.fieldLabel}`,numberField:"Številčno polje"};var Qe={};Qe={decrease:e=>`Smanji ${e.fieldLabel}`,increase:e=>`Povećaj ${e.fieldLabel}`,numberField:"Polje broja"};var ea={};ea={decrease:e=>`Minska ${e.fieldLabel}`,increase:e=>`Öka ${e.fieldLabel}`,numberField:"Nummerfält"};var aa={};aa={decrease:e=>`${e.fieldLabel} azalt`,increase:e=>`${e.fieldLabel} arttır`,numberField:"Sayı alanı"};var ta={};ta={decrease:e=>`Зменшити ${e.fieldLabel}`,increase:e=>`Збільшити ${e.fieldLabel}`,numberField:"Поле номера"};var na={};na={decrease:e=>`降低 ${e.fieldLabel}`,increase:e=>`提高 ${e.fieldLabel}`,numberField:"数字字段"};var la={};la={decrease:e=>`縮小 ${e.fieldLabel}`,increase:e=>`放大 ${e.fieldLabel}`,numberField:"數字欄位"};var ra={};ra={"ar-AE":Ne,"bg-BG":Le,"cs-CZ":Se,"da-DK":De,"de-DE":Pe,"el-GR":Ce,"en-US":we,"es-ES":_e,"et-EE":Ie,"fi-FI":Me,"fr-FR":He,"he-IL":Be,"hr-HR":qe,"hu-HU":Te,"it-IT":Ae,"ja-JP":je,"ko-KR":Re,"lt-LT":ke,"lv-LV":We,"nb-NO":Ue,"nl-NL":ze,"pl-PL":Oe,"pt-BR":Ke,"pt-PT":Ge,"ro-RO":Ze,"ru-RU":Ye,"sk-SK":Xe,"sl-SI":Je,"sr-SP":Qe,"sv-SE":ea,"tr-TR":aa,"uk-UA":ta,"zh-CN":na,"zh-TW":la};function it(e){return e&&e.__esModule?e.default:e}function ot(e,a,t){let{id:i,decrementAriaLabel:s,incrementAriaLabel:o,isDisabled:c,isReadOnly:p,isRequired:m,minValue:y,maxValue:h,autoFocus:r,label:l,formatOptions:f,onBlur:g=()=>{},onFocus:V,onFocusChange:w,onKeyDown:F,onKeyUp:L,description:x,errorMessage:E,isWheelDisabled:v,...U}=e,{increment:I,incrementToMax:z,decrement:M,decrementToMin:O,numberValue:_,inputValue:b,commit:H,commitValidation:B}=a;const q=Ga(it(ra),"@react-aria/numberfield");let T=J(i),{focusProps:K}=za({onBlur(){H()}}),j=$e(f),G=u.useMemo(()=>j.resolvedOptions(),[j]),R=$e({...f,currencySign:void 0}),se=u.useMemo(()=>isNaN(_)?"":R.format(_),[R,_]),{spinButtonProps:d,incrementButtonProps:k,decrementButtonProps:S}=Aa({isDisabled:c,isReadOnly:p,isRequired:m,maxValue:h,minValue:y,onIncrement:I,onIncrementToMax:z,onDecrement:M,onDecrementToMin:O,value:_,textValue:se}),[D,oa]=u.useState(!1),{focusWithinProps:sa}=Ha({isDisabled:c,onFocusWithinChange:oa}),ua=u.useCallback($=>{Math.abs($.deltaY)<=Math.abs($.deltaX)||($.deltaY>0?I():$.deltaY<0&&M())},[M,I]);lt({onScroll:ua,isDisabled:v||c||p||!D},t);let ue=G.maximumFractionDigits>0,de=a.minValue===void 0||isNaN(a.minValue)||a.minValue<0,A="numeric";Ra()?de?A="text":ue&&(A="decimal"):ka()&&(de?A="numeric":ue&&(A="decimal"));let da=$=>{a.validate($)&&a.setInputValue($)},ca=xe(e),ce=u.useCallback($=>{$.key==="Enter"?(H(),B()):$.continuePropagation()},[H,B]),{isInvalid:me,validationErrors:ma,validationDetails:fa}=a.displayValidation,{labelProps:fe,inputProps:pa,descriptionProps:ba,errorMessageProps:ha}=rt({...U,...ca,name:void 0,label:l,autoFocus:r,isDisabled:c,isReadOnly:p,isRequired:m,validate:void 0,[qa]:a,value:b,defaultValue:void 0,autoComplete:"off","aria-label":e["aria-label"]||void 0,"aria-labelledby":e["aria-labelledby"]||void 0,id:T,type:"text",inputMode:A,onChange:da,onBlur:g,onFocus:V,onFocusChange:w,onKeyDown:u.useMemo(()=>Va(ce,F),[ce,F]),onKeyUp:L,description:x,errorMessage:E},a,t);Ua(t,a.numberValue,a.setNumberValue);let pe=W(d,K,pa,{role:null,"aria-roledescription":Wa()?null:q.format("numberField"),"aria-valuemax":null,"aria-valuemin":null,"aria-valuenow":null,"aria-valuetext":null,autoCorrect:"off",spellCheck:"false"});e.validationBehavior==="native"&&(pe["aria-required"]=void 0);let be=$=>{var Y;document.activeElement!==t.current&&($.pointerType==="mouse"?(Y=t.current)===null||Y===void 0||Y.focus():$.target.focus())},Z=e["aria-label"]||(typeof e.label=="string"?e.label:""),P;Z||(P=e.label!=null?fe.id:e["aria-labelledby"]);let he=J(),ve=J(),va=W(k,{"aria-label":o||q.format("increase",{fieldLabel:Z}).trim(),id:P&&!o?he:null,"aria-labelledby":P&&!o?`${he} ${P}`:null,"aria-controls":T,excludeFromTabOrder:!0,preventFocusOnPress:!0,allowFocusWhenDisabled:!0,isDisabled:!a.canIncrement,onPressStart:be}),$a=W(S,{"aria-label":s||q.format("decrease",{fieldLabel:Z}).trim(),id:P&&!s?ve:null,"aria-labelledby":P&&!s?`${ve} ${P}`:null,"aria-controls":T,excludeFromTabOrder:!0,preventFocusOnPress:!0,allowFocusWhenDisabled:!0,isDisabled:!a.canDecrement,onPressStart:be});return{groupProps:{...sa,role:"group","aria-disabled":c,"aria-invalid":me?"true":void 0},labelProps:fe,inputProps:pe,incrementButtonProps:va,decrementButtonProps:$a,errorMessageProps:ha,descriptionProps:ba,isInvalid:me,validationErrors:ma,validationDetails:fa}}function st(e){let{minValue:a,maxValue:t,step:i,formatOptions:s,value:o,defaultValue:c=NaN,onChange:p,locale:m,isDisabled:y,isReadOnly:h}=e;o===null&&(o=NaN),o!==void 0&&!isNaN(o)&&(i!==void 0&&!isNaN(i)?o=N(o,a,t,i):o=Q(o,a,t)),isNaN(c)||(i!==void 0&&!isNaN(i)?c=N(c,a,t,i):c=Q(c,a,t));let[r,l]=Ba(o,isNaN(c)?NaN:c,p),[f,g]=u.useState(()=>isNaN(r)?"":new ae(m,s).format(r)),V=u.useMemo(()=>new ja(m,s),[m,s]),w=u.useMemo(()=>V.getNumberingSystem(f),[V,f]),F=u.useMemo(()=>new ae(m,{...s,numberingSystem:w}),[m,s,w]),L=u.useMemo(()=>F.resolvedOptions(),[F]),x=u.useCallback(d=>isNaN(d)||d===null?"":F.format(d),[F]),E=Ta({...e,value:r}),v=i!==void 0&&!isNaN(i)?i:1;L.style==="percent"&&(i===void 0||isNaN(i))&&(v=.01);let[U,I]=u.useState(r),[z,M]=u.useState(m),[O,_]=u.useState(s);(!Object.is(r,U)||m!==z||s!==O)&&(g(x(r)),I(r),M(m),_(s));let b=u.useMemo(()=>V.parse(f),[V,f]),H=()=>{if(!f.length){l(NaN),g(o===void 0?"":x(r));return}if(isNaN(b)){g(x(r));return}let d;i===void 0||isNaN(i)?d=Q(b,a,t):d=N(b,a,t,i),d=V.parse(x(d)),l(d),g(x(o===void 0?d:r))},B=(d,k=0)=>{let S=b;if(isNaN(S)){let D=isNaN(k)?0:k;return N(D,a,t,v)}else{let D=N(S,a,t,v);return d==="+"&&D>S||d==="-"&&D<S?D:N(ee(d,S,v),a,t,v)}},q=()=>{let d=B("+",a);d===r&&g(x(d)),l(d),E.commitValidation()},T=()=>{let d=B("-",t);d===r&&g(x(d)),l(d),E.commitValidation()},K=()=>{t!=null&&(l(N(t,a,t,v)),E.commitValidation())},j=()=>{a!=null&&(l(a),E.commitValidation())},G=u.useMemo(()=>!y&&!h&&(isNaN(b)||t===void 0||isNaN(t)||N(b,a,t,v)>b||ee("+",b,v)<=t),[y,h,a,t,v,b]),R=u.useMemo(()=>!y&&!h&&(isNaN(b)||a===void 0||isNaN(a)||N(b,a,t,v)<b||ee("-",b,v)>=a),[y,h,a,t,v,b]);return{...E,validate:d=>V.isValidPartialNumber(d,a,t),increment:q,incrementToMax:K,decrement:T,decrementToMin:j,canIncrement:G,canDecrement:R,minValue:a,maxValue:t,numberValue:b,setNumberValue:l,setInputValue:g,inputValue:f,commit:H}}function ee(e,a,t){let i=e==="+"?a+t:a-t;if(a%1!==0||t%1!==0){const s=a.toString().split("."),o=t.toString().split("."),c=s[1]&&s[1].length||0,p=o[1]&&o[1].length||0,m=Math.pow(10,Math.max(c,p));a=Math.round(a*m),t=Math.round(t*m),i=e==="+"?a+t:a-t,i/=m}return i}const ut=u.createContext(null),dt=u.createContext(null);function ct(e,a){[e,a]=Ea(e,a,ut);let{validationBehavior:t}=Fa(Ca)||{};var i,s;let o=(s=(i=e.validationBehavior)!==null&&i!==void 0?i:t)!==null&&s!==void 0?s:"native",{locale:c}=Ve(),p=st({...e,locale:c,validationBehavior:o}),m=u.useRef(null),[y,h]=Na(),{labelProps:r,groupProps:l,inputProps:f,incrementButtonProps:g,decrementButtonProps:V,descriptionProps:w,errorMessageProps:F,...L}=ot({...La(e),label:h,validationBehavior:o},p,m),x=Sa({...e,values:{state:p,isDisabled:e.isDisabled||!1,isInvalid:L.isInvalid||!1},defaultClassName:"react-aria-NumberField"}),E=xe(e);return delete E.id,X.createElement(Da,{values:[[dt,p],[wa,l],[_a,{...f,ref:m}],[Ia,{...r,ref:y}],[ga,{slots:{increment:g,decrement:V}}],[Ma,{slots:{description:w,errorMessage:F}}],[Pa,L]]},X.createElement("div",{...E,...x,ref:a,slot:e.slot||void 0,"data-disabled":e.isDisabled||void 0,"data-invalid":L.isInvalid||void 0}),e.name&&X.createElement("input",{type:"hidden",name:e.name,value:isNaN(p.numberValue)?"":p.numberValue}))}const mt=u.forwardRef(ct);var ia={};(function(e){Object.defineProperty(e,"__esModule",{value:!0});var a="fas",t="minus",i=448,s=512,o=[8211,8722,10134,"subtract"],c="f068",p="M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z";e.definition={prefix:a,iconName:t,icon:[i,s,o,c,p]},e.faMinus=e.definition,e.prefix=a,e.iconName=t,e.width=i,e.height=s,e.ligatures=o,e.unicode=c,e.svgPathData=p,e.aliases=o})(ia);function te(){return n.jsx(Ee,{slot:"increment",children:n.jsx(Fe,{icon:ya.faPlus})})}function ne(){return n.jsx(Ee,{slot:"decrement",children:n.jsx(Fe,{icon:ia.faMinus})})}const C=u.forwardRef((e,a)=>n.jsx(mt,{...e,className:re(e.className,"number-field"),ref:a}));function ge({children:e,...a}){if(!a.name)throw new Error("FormNumberField requires a name prop");const{control:t}=Za(),{field:{disabled:i,onChange:s,ref:o,value:c=a.value,...p},fieldState:{error:m,invalid:y}}=Ya({control:t,defaultValue:a.defaultValue,disabled:a.isDisabled,name:a.name});return u.useEffect(()=>{s(a.value)},[s,a.value]),n.jsx(C,{...a,...p,isDisabled:i,isInvalid:y,onChange:h=>{var r;s(h),(r=a.onChange)==null||r.call(a,h)},ref:o,validationBehavior:"aria",value:c,children:()=>n.jsxs(n.Fragment,{children:[e,n.jsx(Xa,{children:m==null?void 0:m.message})]})})}try{te.displayName="NumberFieldIncrementButton",te.__docgenInfo={description:"A `FieldButton` to decrement the number field value. [Built with React Button component](https://react-spectrum.adobe.com/react-aria/Button.html)",displayName:"NumberFieldIncrementButton",props:{}}}catch{}try{ne.displayName="NumberFieldDecrementButton",ne.__docgenInfo={description:"A `FieldButton` to increment the number field value. [Built with React Button component](https://react-spectrum.adobe.com/react-aria/Button.html)",displayName:"NumberFieldDecrementButton",props:{}}}catch{}try{ge.displayName="FormNumberField",ge.__docgenInfo={description:"A form number field connects a `NumberField` to a `Form` component using `react-hook-form`.\n\n[React Aria Documentation](https://react-spectrum.adobe.com/react-aria/NumberField.html)",displayName:"FormNumberField",props:{isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: number) => true | ValidationError"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},minValue:{defaultValue:null,description:"The smallest value allowed for the input.",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"The largest value allowed for the input.",name:"maxValue",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"number"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: number) => void"}},onSelect:{defaultValue:null,description:"Handler that is called when text in the input is selected. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event).",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLInputElement>"}},onCopy:{defaultValue:null,description:"Handler that is called when the user copies text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncopy).",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCut:{defaultValue:null,description:"Handler that is called when the user cuts text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncut).",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onPaste:{defaultValue:null,description:"Handler that is called when the user pastes text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste).",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCompositionEnd:{defaultValue:null,description:"Handler that is called when a text composition system completes or cancels the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event).",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionStart:{defaultValue:null,description:"Handler that is called when a text composition system starts a new text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event).",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionUpdate:{defaultValue:null,description:"Handler that is called when a new character is received in the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event).",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onBeforeInput:{defaultValue:null,description:"Handler that is called when the input value is about to be modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event).",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},onInput:{defaultValue:null,description:"Handler that is called when the input value is modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event).",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},step:{defaultValue:null,description:'The amount that the input value changes with each increment or decrement "tick".',name:"step",required:!1,type:{name:"number"}},decrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the decrement button. If not provided, the localized string "Decrement" is used.',name:"decrementAriaLabel",required:!1,type:{name:"string"}},incrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the increment button. If not provided, the localized string "Increment" is used.',name:"incrementAriaLabel",required:!1,type:{name:"string"}},isWheelDisabled:{defaultValue:null,description:"Enables or disables changing the value with scroll.",name:"isWheelDisabled",required:!1,type:{name:"boolean"}},formatOptions:{defaultValue:null,description:`Formatting options for the value displayed in the number field.
This also affects what characters are allowed to be typed by the user.`,name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: NumberFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: NumberFieldRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: NumberFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLInputElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}}}catch{}try{C.displayName="NumberField",C.__docgenInfo={description:'A number field allows a user to enter a number, and increment or decrement the value using stepper buttons. [Built with React Aria NumberField component](https://react-spectrum.adobe.com/react-aria/NumberField.html)\n\n## Install\n\n```sh\nnpm i boondoggle\n```\n\n## Usage\n\n```ts\nimport { NumberField } from "boondoggle";\n```',displayName:"NumberField",props:{isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},isReadOnly:{defaultValue:null,description:"Whether the input can be selected but not changed by the user.",name:"isReadOnly",required:!1,type:{name:"boolean"}},isRequired:{defaultValue:null,description:"Whether user input is required on the input before form submission.",name:"isRequired",required:!1,type:{name:"boolean"}},isInvalid:{defaultValue:null,description:"Whether the input value is invalid.",name:"isInvalid",required:!1,type:{name:"boolean"}},validate:{defaultValue:null,description:'A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior="native"`. For realtime validation, use the `isInvalid`\nprop instead.',name:"validate",required:!1,type:{name:"(value: number) => true | ValidationError"}},autoFocus:{defaultValue:null,description:"Whether the element should receive focus on render.",name:"autoFocus",required:!1,type:{name:"boolean"}},onFocus:{defaultValue:null,description:"Handler that is called when the element receives focus.",name:"onFocus",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onBlur:{defaultValue:null,description:"Handler that is called when the element loses focus.",name:"onBlur",required:!1,type:{name:"(e: FocusEvent<Element, Element>) => void"}},onFocusChange:{defaultValue:null,description:"Handler that is called when the element's focus status changes.",name:"onFocusChange",required:!1,type:{name:"(isFocused: boolean) => void"}},onKeyDown:{defaultValue:null,description:"Handler that is called when a key is pressed.",name:"onKeyDown",required:!1,type:{name:"(e: KeyboardEvent) => void"}},onKeyUp:{defaultValue:null,description:"Handler that is called when a key is released.",name:"onKeyUp",required:!1,type:{name:"(e: KeyboardEvent) => void"}},id:{defaultValue:null,description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",name:"id",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Defines a string value that labels the current element.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Identifies the element (or elements) that labels the current element.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Identifies the element (or elements) that describes the object.",name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:"Identifies the element (or elements) that provide a detailed, extended description for the object.",name:"aria-details",required:!1,type:{name:"string"}},minValue:{defaultValue:null,description:"The smallest value allowed for the input.",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:null,description:"The largest value allowed for the input.",name:"maxValue",required:!1,type:{name:"number"}},value:{defaultValue:null,description:"The current value (controlled).",name:"value",required:!1,type:{name:"number"}},defaultValue:{defaultValue:null,description:"The default value (uncontrolled).",name:"defaultValue",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"(value: number) => void"}},onSelect:{defaultValue:null,description:"Handler that is called when text in the input is selected. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event).",name:"onSelect",required:!1,type:{name:"ReactEventHandler<HTMLInputElement>"}},onCopy:{defaultValue:null,description:"Handler that is called when the user copies text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncopy).",name:"onCopy",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCut:{defaultValue:null,description:"Handler that is called when the user cuts text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/oncut).",name:"onCut",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onPaste:{defaultValue:null,description:"Handler that is called when the user pastes text. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/onpaste).",name:"onPaste",required:!1,type:{name:"ClipboardEventHandler<HTMLInputElement>"}},onCompositionEnd:{defaultValue:null,description:"Handler that is called when a text composition system completes or cancels the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event).",name:"onCompositionEnd",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionStart:{defaultValue:null,description:"Handler that is called when a text composition system starts a new text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event).",name:"onCompositionStart",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onCompositionUpdate:{defaultValue:null,description:"Handler that is called when a new character is received in the current text composition session. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event).",name:"onCompositionUpdate",required:!1,type:{name:"CompositionEventHandler<HTMLInputElement>"}},onBeforeInput:{defaultValue:null,description:"Handler that is called when the input value is about to be modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/beforeinput_event).",name:"onBeforeInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},onInput:{defaultValue:null,description:"Handler that is called when the input value is modified. See [MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event).",name:"onInput",required:!1,type:{name:"FormEventHandler<HTMLInputElement>"}},step:{defaultValue:null,description:'The amount that the input value changes with each increment or decrement "tick".',name:"step",required:!1,type:{name:"number"}},decrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the decrement button. If not provided, the localized string "Decrement" is used.',name:"decrementAriaLabel",required:!1,type:{name:"string"}},incrementAriaLabel:{defaultValue:null,description:'A custom aria-label for the increment button. If not provided, the localized string "Increment" is used.',name:"incrementAriaLabel",required:!1,type:{name:"string"}},isWheelDisabled:{defaultValue:null,description:"Enables or disables changing the value with scroll.",name:"isWheelDisabled",required:!1,type:{name:"boolean"}},formatOptions:{defaultValue:null,description:`Formatting options for the value displayed in the number field.
This also affects what characters are allowed to be typed by the user.`,name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},validationBehavior:{defaultValue:{value:"'native'"},description:`Whether to use native HTML form validation to prevent form submission
when the value is missing or invalid, or mark the field as required
or invalid via ARIA.`,name:"validationBehavior",required:!1,type:{name:'"native" | "aria"'}},name:{defaultValue:null,description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",name:"name",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children of the component. A function may be provided to alter the children based on component state.",name:"children",required:!1,type:{name:"ReactNode | ((values: NumberFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"}},className:{defaultValue:null,description:"The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",name:"className",required:!1,type:{name:"string | ((values: NumberFieldRenderProps & { defaultClassName: string; }) => string)"}},style:{defaultValue:null,description:"The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",name:"style",required:!1,type:{name:"CSSProperties | ((values: NumberFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"}},slot:{defaultValue:null,description:"A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",name:"slot",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",name:"ref",required:!1,type:{name:"LegacyRef<HTMLInputElement>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key"}}}}}catch{}function le({className:e}){return n.jsxs("svg",{className:re(e,"icon-flag"),viewBox:"0 0 512 512",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[n.jsx("defs",{children:n.jsxs("g",{id:"eu_svg__d",children:[n.jsxs("g",{id:"eu_svg__b",children:[n.jsx("path",{d:"m0-1-.3 1 .5.1z",id:"eu_svg__a"}),n.jsx("use",{transform:"scale(-1 1)",xlinkHref:"#eu_svg__a"})]}),n.jsxs("g",{id:"eu_svg__c",children:[n.jsx("use",{transform:"rotate(72)",xlinkHref:"#eu_svg__b"}),n.jsx("use",{transform:"rotate(144)",xlinkHref:"#eu_svg__b"})]}),n.jsx("use",{transform:"scale(-1 1)",xlinkHref:"#eu_svg__c"})]})}),n.jsx("path",{d:"M0 0h512v512H0z",fill:"#039"}),n.jsxs("g",{fill:"#fc0",transform:"translate(256 258.4) scale(25.28395)",children:[n.jsx("use",{height:"100%",width:"100%",xlinkHref:"#eu_svg__d",y:-6}),n.jsx("use",{height:"100%",width:"100%",xlinkHref:"#eu_svg__d",y:6}),n.jsxs("g",{id:"eu_svg__e",children:[n.jsx("use",{height:"100%",width:"100%",x:-6,xlinkHref:"#eu_svg__d"}),n.jsx("use",{height:"100%",transform:"rotate(-144 -2.3 -2.1)",width:"100%",xlinkHref:"#eu_svg__d"}),n.jsx("use",{height:"100%",transform:"rotate(144 -2.1 -2.3)",width:"100%",xlinkHref:"#eu_svg__d"}),n.jsx("use",{height:"100%",transform:"rotate(72 -4.7 -2)",width:"100%",xlinkHref:"#eu_svg__d"}),n.jsx("use",{height:"100%",transform:"rotate(72 -5 .5)",width:"100%",xlinkHref:"#eu_svg__d"})]}),n.jsx("use",{height:"100%",transform:"scale(-1 1)",width:"100%",xlinkHref:"#eu_svg__e"})]})]})}try{le.displayName="FlagEu",le.__docgenInfo={description:"A flag component",displayName:"FlagEu",props:{className:{defaultValue:null,description:"CSS classname applied to the icon",name:"className",required:!1,type:{name:"string"}}}}}catch{}const ft={args:{},component:C,decorators:[e=>n.jsxs(n.Fragment,{children:[n.jsx(nt,{}),n.jsx(e,{})]})],render:e=>n.jsxs(C,{...e,children:[n.jsx(oe,{children:"Label"}),n.jsx(ie,{})]}),title:"Components/NumberField"},pt={},bt={args:{isInvalid:!0}},ht={args:{formatOptions:{style:"percent"},maxValue:1,minValue:0,step:.01}},vt={args:{children:n.jsxs(n.Fragment,{children:[n.jsx(oe,{children:"Count"}),n.jsxs(Ja,{children:[n.jsx(ie,{unstyled:!0}),n.jsx(ne,{}),n.jsx(te,{})]})]}),step:100},render:e=>n.jsx(C,{...e})},$t={args:{defaultValue:42000.69,id:"amount",name:"amount"},render:()=>{const[e,a]=u.useState("EUR");return n.jsxs("div",{className:"mb-2",children:[n.jsx(oe,{htmlFor:"amount",children:"Amount"}),n.jsxs("div",{className:re("flex","gap-2","align-center"),children:[n.jsx(C,{defaultValue:42000.69,formatOptions:{currency:e,currencyDisplay:"code",style:"currency"},id:"amount",name:"amount",children:n.jsx(ie,{})}),n.jsx(at,{"aria-label":"Currency",items:[{id:"EUR",name:"EUR",slotLeft:n.jsx(le,{})},{id:"USD",name:"USD",slotLeft:n.jsx(Qa,{})},{id:"GBP",name:"GBP",slotLeft:n.jsx(et,{})}],onSelectionChange:t=>{a(t)},placement:"bottom end",selectedKey:e,children:n.jsx(tt,{})})]})]})}},an=Object.freeze(Object.defineProperty({__proto__:null,Default:pt,IncrementDecrement:vt,Invalid:bt,Percent:ht,WithCurrencySelect:$t,default:ft},Symbol.toStringTag,{value:"Module"}));export{pt as D,C as N,an as s};
